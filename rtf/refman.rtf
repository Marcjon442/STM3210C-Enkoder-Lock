{\rtf1\ansi\ansicpg1250\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset238\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset238\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset238\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Zamek Szyfrowy na Enkoderze  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2.0 \par
}}Zamek Szyfrowy na Enkoderze}
{\comment Wygenerowano przez doxygen 1.9.6.}
{\creatim \yr2023\mo2\dy7\hr13\min41\sec1}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Zamek Szyfrowy na Enkoderze}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Wersja 2.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Wt, 7 lut 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Spis tre\'9Cci\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indeks grup\par \pard\plain 
{\tc \v Indeks grup}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Modu\'B3y\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Tutaj znajduje si\'EA lista wszystkich grup:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CMSIS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Stm32f1xx_system\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
STM32F1xx_System_Private_Includes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F1xx_System_Private_TypesDefinitions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F1xx_System_Private_Defines\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F1xx_System_Private_Macros\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F1xx_System_Private_Variables\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F1xx_System_Private_FunctionPrototypes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
STM32F1xx_System_Private_Functions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Indeks plik\'F3w\par \pard\plain 
{\tc \v Indeks plik\'F3w}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista plik\'F3w\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Tutaj znajduje si\'EA lista wszystkich plik\'F3w z ich kr\'F3tkimi opisami:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b Core/Src/{\b freertos.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Core/Src/{\b gpio.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of all used GPIO pins })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Core/Src/{\b main.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of all used GPIO pins })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Core/Src/{\b stm32f1xx_hal_msp.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Core/Src/{\b stm32f1xx_hal_timebase_tim.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Core/Src/{\b stm32f1xx_it.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Service Routines })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Core/Src/{\b system_stm32f1xx.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M3 Device Peripheral Access Layer System Source File })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Dokumentacja grup{\tc \v Dokumentacja grup}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CMSIS\par \pard\plain 
{\tc\tcl2 \v CMSIS}
{\xe \v CMSIS}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modu\'B3y\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Stm32f1xx_system}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Stm32f1xx_system\par \pard\plain 
{\tc\tcl2 \v Stm32f1xx_system}
{\xe \v Stm32f1xx_system}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Modu\'B3y\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F1xx_System_Private_Includes}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F1xx_System_Private_TypesDefinitions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F1xx_System_Private_Defines}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F1xx_System_Private_Macros}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F1xx_System_Private_Variables}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F1xx_System_Private_FunctionPrototypes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b STM32F1xx_System_Private_Functions}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STM32F1xx_System_Private_Includes\par \pard\plain 
{\tc\tcl2 \v STM32F1xx_System_Private_Includes}
{\xe \v STM32F1xx_System_Private_Includes}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STM32F1xx_System_Private_TypesDefinitions\par \pard\plain 
{\tc\tcl2 \v STM32F1xx_System_Private_TypesDefinitions}
{\xe \v STM32F1xx_System_Private_TypesDefinitions}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STM32F1xx_System_Private_Defines\par \pard\plain 
{\tc\tcl2 \v STM32F1xx_System_Private_Defines}
{\xe \v STM32F1xx_System_Private_Defines}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definicje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSE_VALUE}\~ 8000000U\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSI_VALUE}\~ 8000000U\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja definicji\par
\pard\plain 
{\xe \v HSE_VALUE\:STM32F1xx_System_Private_Defines}
{\xe \v STM32F1xx_System_Private_Defines\:HSE_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HSE_VALUE\~ 8000000U}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default value of the External oscillator in Hz. This value can be provided and adapted by the user application. \par
}{
Definicja w linii {\b 79} pliku {\b system_stm32f1xx.c}.}\par
}
{\xe \v HSI_VALUE\:STM32F1xx_System_Private_Defines}
{\xe \v STM32F1xx_System_Private_Defines\:HSI_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HSI_VALUE\~ 8000000U}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default value of the Internal oscillator in Hz. This value can be provided and adapted by the user application. \par
}{
Definicja w linii {\b 84} pliku {\b system_stm32f1xx.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STM32F1xx_System_Private_Macros\par \pard\plain 
{\tc\tcl2 \v STM32F1xx_System_Private_Macros}
{\xe \v STM32F1xx_System_Private_Macros}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STM32F1xx_System_Private_Variables\par \pard\plain 
{\tc\tcl2 \v STM32F1xx_System_Private_Variables}
{\xe \v STM32F1xx_System_Private_Variables}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Zmienne\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SystemCoreClock} = 16000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint8_t {\b AHBPrescTable} [16U] = \{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint8_t {\b APBPrescTable} [8U] = \{0, 0, 0, 0, 1, 2, 3, 4\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja zmiennych\par
\pard\plain 
{\xe \v AHBPrescTable\:STM32F1xx_System_Private_Variables}
{\xe \v STM32F1xx_System_Private_Variables\:AHBPrescTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint8_t AHBPrescTable[16U] = \{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9\}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 143} pliku {\b system_stm32f1xx.c}.}\par
}
{\xe \v APBPrescTable\:STM32F1xx_System_Private_Variables}
{\xe \v STM32F1xx_System_Private_Variables\:APBPrescTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint8_t APBPrescTable[8U] = \{0, 0, 0, 0, 1, 2, 3, 4\}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 144} pliku {\b system_stm32f1xx.c}.}\par
}
{\xe \v SystemCoreClock\:STM32F1xx_System_Private_Variables}
{\xe \v STM32F1xx_System_Private_Variables\:SystemCoreClock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t SystemCoreClock = 16000000}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 142} pliku {\b system_stm32f1xx.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STM32F1xx_System_Private_FunctionPrototypes\par \pard\plain 
{\tc\tcl2 \v STM32F1xx_System_Private_FunctionPrototypes}
{\xe \v STM32F1xx_System_Private_FunctionPrototypes}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STM32F1xx_System_Private_Functions\par \pard\plain 
{\tc\tcl2 \v STM32F1xx_System_Private_Functions}
{\xe \v STM32F1xx_System_Private_Functions}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funkcje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the Embedded Flash Interface, the PLL and update the SystemCoreClock variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemCoreClockUpdate} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja funkcji\par
\pard\plain 
{\xe \v SystemCoreClockUpdate\:STM32F1xx_System_Private_Functions}
{\xe \v STM32F1xx_System_Private_Functions\:SystemCoreClockUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemCoreClockUpdate (void )}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Each time the core clock (HCLK) changes, this function must be called to update SystemCoreClock variable value. Otherwise, any configuration based on this variable will be incorrect. \par
- The system frequency computed by this function is not the real frequency in the chip. It is calculated based on the predefined constant and the selected clock source:\par
}}{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
If SYSCLK source is HSI, SystemCoreClock will contain the {\b HSI_VALUE(*)}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
If SYSCLK source is HSE, SystemCoreClock will contain the {\b HSE_VALUE(**)}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
If SYSCLK source is PLL, SystemCoreClock will contain the {\b HSE_VALUE(**)} or {\b HSI_VALUE(*)} multiplied by the PLL factors.\par}
(*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value 8 MHz) but the real value may vary depending on the variations in voltage and temperature. \par
(**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value 8 MHz or 25 MHz, depending on the product used), user has to ensure that HSE_VALUE is same as the real frequency of the crystal used. Otherwise, this function may have wrong result.\par
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The result of this function could be not correct when using fractional value for HSE crystal. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}
}{
Definicja w linii {\b 225} pliku {\b system_stm32f1xx.c}.}\par
}
{\xe \v SystemInit\:STM32F1xx_System_Private_Functions}
{\xe \v STM32F1xx_System_Private_Functions\:SystemInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemInit (void )}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the Embedded Flash Interface, the PLL and update the SystemCoreClock variable. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function should be used only after reset. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 176} pliku {\b system_stm32f1xx.c}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Dokumentacja plik\'F3w{\tc \v Dokumentacja plik\'F3w}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dokumentacja pliku Core/Src/freertos.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/freertos.c}
{\xe \v Core/Src/freertos.c}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FreeRTOS.h"}\par
{\f2 #include "task.h"}\par
{\f2 #include "main.h"}\par
{\f2 #include "cmsis_os.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funkcje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Wyswietlacz} (void const *argument)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function implementing the Task1 thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MX_FREERTOS_Init} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FreeRTOS initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b vApplicationGetIdleTaskMemory} (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b vApplicationGetTimerTaskMemory} (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b vApplicationTickHook} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Zmienne\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
osThreadId {\b Task1Handle}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja funkcji\par
\pard\plain 
{\xe \v MX_FREERTOS_Init\:freertos.c}
{\xe \v freertos.c\:MX_FREERTOS_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MX_FREERTOS_Init (void )}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FreeRTOS initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 112} pliku {\b freertos.c}.}\par
}
{\xe \v vApplicationGetIdleTaskMemory\:freertos.c}
{\xe \v freertos.c\:vApplicationGetIdleTaskMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void vApplicationGetIdleTaskMemory (StaticTask_t **  {\i ppxIdleTaskTCBBuffer}, StackType_t **  {\i ppxIdleTaskStackBuffer}, uint32_t *  {\i pulIdleTaskStackSize})}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 85} pliku {\b freertos.c}.}\par
}
{\xe \v vApplicationGetTimerTaskMemory\:freertos.c}
{\xe \v freertos.c\:vApplicationGetTimerTaskMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void vApplicationGetTimerTaskMemory (StaticTask_t **  {\i ppxTimerTaskTCBBuffer}, StackType_t **  {\i ppxTimerTaskStackBuffer}, uint32_t *  {\i pulTimerTaskStackSize})}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 98} pliku {\b freertos.c}.}\par
}
{\xe \v vApplicationTickHook\:freertos.c}
{\xe \v freertos.c\:vApplicationTickHook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
__weak void vApplicationTickHook (void )}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 71} pliku {\b freertos.c}.}\par
}
{\xe \v Wyswietlacz\:freertos.c}
{\xe \v freertos.c\:Wyswietlacz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Wyswietlacz (void const *  {\i argument})}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function implementing the Task1 thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argument} \cell }{Not used \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 151} pliku {\b freertos.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja zmiennych\par
\pard\plain 
{\xe \v Task1Handle\:freertos.c}
{\xe \v freertos.c\:Task1Handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
osThreadId Task1Handle}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
File Name : {\b freertos.c} Description : Code for freertos applications\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Uwaga\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}{
Definicja w linii {\b 50} pliku {\b freertos.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
freertos.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/freertos.c}
{\xe \v Core/Src/freertos.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Id\'9F do dokumentacji tego pliku.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* USER CODE BEGIN Header */}\par
00018 {\cf20 /* USER CODE END Header */}\par
00019 \par
00020 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
00021 {\cf21 #include "FreeRTOS.h"}\par
00022 {\cf21 #include "task.h"}\par
00023 {\cf21 #include "main.h"}\par
00024 {\cf21 #include "cmsis_os.h"}\par
00025 \par
00026 {\cf20 /* Private includes ----------------------------------------------------------*/}\par
00027 {\cf20 /* USER CODE BEGIN Includes */}\par
00028 \par
00029 {\cf20 /* USER CODE END Includes */}\par
00030 \par
00031 {\cf20 /* Private typedef -----------------------------------------------------------*/}\par
00032 {\cf20 /* USER CODE BEGIN PTD */}\par
00033 \par
00034 {\cf20 /* USER CODE END PTD */}\par
00035 \par
00036 {\cf20 /* Private define ------------------------------------------------------------*/}\par
00037 {\cf20 /* USER CODE BEGIN PD */}\par
00038 \par
00039 {\cf20 /* USER CODE END PD */}\par
00040 \par
00041 {\cf20 /* Private macro -------------------------------------------------------------*/}\par
00042 {\cf20 /* USER CODE BEGIN PM */}\par
00043 \par
00044 {\cf20 /* USER CODE END PM */}\par
00045 \par
00046 {\cf20 /* Private variables ---------------------------------------------------------*/}\par
00047 {\cf20 /* USER CODE BEGIN Variables */}\par
00048 \par
00049 {\cf20 /* USER CODE END Variables */}\par
00050 osThreadId Task1Handle;\par
00051 \par
00052 {\cf20 /* Private function prototypes -----------------------------------------------*/}\par
00053 {\cf20 /* USER CODE BEGIN FunctionPrototypes */}\par
00054 \par
00055 {\cf20 /* USER CODE END FunctionPrototypes */}\par
00056 \par
00057 {\cf18 void} Wyswietlacz({\cf18 void} {\cf17 const} * argument);\par
00058 \par
00059 {\cf18 void} MX_FREERTOS_Init({\cf18 void}); {\cf20 /* (MISRA C 2004 rule 8.1) */}\par
00060 \par
00061 {\cf20 /* GetIdleTaskMemory prototype (linked to static allocation support) */}\par
00062 {\cf18 void} vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize );\par
00063 \par
00064 {\cf20 /* GetTimerTaskMemory prototype (linked to static allocation support) */}\par
00065 {\cf18 void} vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize );\par
00066 \par
00067 {\cf20 /* Hook prototypes */}\par
00068 {\cf18 void} vApplicationTickHook({\cf18 void});\par
00069 \par
00070 {\cf20 /* USER CODE BEGIN 3 */}\par
00071 __weak {\cf18 void} vApplicationTickHook( {\cf18 void} )\par
00072 \{\par
00073    {\cf20 /* This function will be called by each tick interrupt if}\par
00074 {\cf20    configUSE_TICK_HOOK is set to 1 in FreeRTOSConfig.h. User code can be}\par
00075 {\cf20    added here, but the tick hook is called from an interrupt context, so}\par
00076 {\cf20    code must not attempt to block, and only the interrupt safe FreeRTOS API}\par
00077 {\cf20    functions can be used (those that end in FromISR()). */}\par
00078 \}\par
00079 {\cf20 /* USER CODE END 3 */}\par
00080 \par
00081 {\cf20 /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */}\par
00082 {\cf17 static} StaticTask_t xIdleTaskTCBBuffer;\par
00083 {\cf17 static} StackType_t xIdleStack[configMINIMAL_STACK_SIZE];\par
00084 \par
00085 {\cf18 void} vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize )\par
00086 \{\par
00087   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;\par
00088   *ppxIdleTaskStackBuffer = &xIdleStack[0];\par
00089   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;\par
00090   {\cf20 /* place for user code */}\par
00091 \}\par
00092 {\cf20 /* USER CODE END GET_IDLE_TASK_MEMORY */}\par
00093 \par
00094 {\cf20 /* USER CODE BEGIN GET_TIMER_TASK_MEMORY */}\par
00095 {\cf17 static} StaticTask_t xTimerTaskTCBBuffer;\par
00096 {\cf17 static} StackType_t xTimerStack[configTIMER_TASK_STACK_DEPTH];\par
00097 \par
00098 {\cf18 void} vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize )\par
00099 \{\par
00100   *ppxTimerTaskTCBBuffer = &xTimerTaskTCBBuffer;\par
00101   *ppxTimerTaskStackBuffer = &xTimerStack[0];\par
00102   *pulTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;\par
00103   {\cf20 /* place for user code */}\par
00104 \}\par
00105 {\cf20 /* USER CODE END GET_TIMER_TASK_MEMORY */}\par
00106 \par
00112 {\cf18 void} MX_FREERTOS_Init({\cf18 void}) \{\par
00113   {\cf20 /* USER CODE BEGIN Init */}\par
00114 \par
00115   {\cf20 /* USER CODE END Init */}\par
00116 \par
00117   {\cf20 /* USER CODE BEGIN RTOS_MUTEX */}\par
00118   {\cf20 /* add mutexes, ... */}\par
00119   {\cf20 /* USER CODE END RTOS_MUTEX */}\par
00120 \par
00121   {\cf20 /* USER CODE BEGIN RTOS_SEMAPHORES */}\par
00122   {\cf20 /* add semaphores, ... */}\par
00123   {\cf20 /* USER CODE END RTOS_SEMAPHORES */}\par
00124 \par
00125   {\cf20 /* USER CODE BEGIN RTOS_TIMERS */}\par
00126   {\cf20 /* start timers, add new ones, ... */}\par
00127   {\cf20 /* USER CODE END RTOS_TIMERS */}\par
00128 \par
00129   {\cf20 /* USER CODE BEGIN RTOS_QUEUES */}\par
00130   {\cf20 /* add queues, ... */}\par
00131   {\cf20 /* USER CODE END RTOS_QUEUES */}\par
00132 \par
00133   {\cf20 /* Create the thread(s) */}\par
00134   {\cf20 /* definition and creation of Task1 */}\par
00135   osThreadDef(Task1, Wyswietlacz, osPriorityIdle, 0, 128);\par
00136   Task1Handle = osThreadCreate(osThread(Task1), NULL);\par
00137 \par
00138   {\cf20 /* USER CODE BEGIN RTOS_THREADS */}\par
00139   {\cf20 /* add threads, ... */}\par
00140   {\cf20 /* USER CODE END RTOS_THREADS */}\par
00141 \par
00142 \}\par
00143 \par
00144 {\cf20 /* USER CODE BEGIN Header_Wyswietlacz */}\par
00150 {\cf20 /* USER CODE END Header_Wyswietlacz */}\par
00151 {\cf18 void} Wyswietlacz({\cf18 void} {\cf17 const} * argument)\par
00152 \{\par
00153   {\cf20 /* USER CODE BEGIN Wyswietlacz */}\par
00154   {\cf20 /* Infinite loop */}\par
00155   {\cf19 for}(;;)\par
00156   \{\par
00157     osDelay(1);\par
00158   \}\par
00159   {\cf20 /* USER CODE END Wyswietlacz */}\par
00160 \}\par
00161 \par
00162 {\cf20 /* Private application code --------------------------------------------------*/}\par
00163 {\cf20 /* USER CODE BEGIN Application */}\par
00164 \par
00165 {\cf20 /* USER CODE END Application */}\par
00166 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dokumentacja pliku Core/Src/gpio.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/gpio.c}
{\xe \v Core/Src/gpio.c}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of all used GPIO pins. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gpio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funkcje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MX_GPIO_Init} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of all used GPIO pins. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Uwaga\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}{
Definicja w pliku {\b gpio.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja funkcji\par
\pard\plain 
{\xe \v MX_GPIO_Init\:gpio.c}
{\xe \v gpio.c\:MX_GPIO_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MX_GPIO_Init (void )}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configure pins as Analog Input Output EVENT_OUT EXTI \par
}{
Definicja w linii {\b 42} pliku {\b gpio.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gpio.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/gpio.c}
{\xe \v Core/Src/gpio.c}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Id\'9F do dokumentacji tego pliku.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* USER CODE BEGIN Header */}\par
00019 {\cf20 /* USER CODE END Header */}\par
00020 \par
00021 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
00022 {\cf21 #include "gpio.h"}\par
00023 \par
00024 {\cf20 /* USER CODE BEGIN 0 */}\par
00025 \par
00026 {\cf20 /* USER CODE END 0 */}\par
00027 \par
00028 {\cf20 /*----------------------------------------------------------------------------*/}\par
00029 {\cf20 /* Configure GPIO                                                             */}\par
00030 {\cf20 /*----------------------------------------------------------------------------*/}\par
00031 {\cf20 /* USER CODE BEGIN 1 */}\par
00032 \par
00033 {\cf20 /* USER CODE END 1 */}\par
00034 \par
00042 {\cf18 void} MX_GPIO_Init({\cf18 void})\par
00043 \{\par
00044 \par
00045   GPIO_InitTypeDef GPIO_InitStruct = \{0\};\par
00046 \par
00047   {\cf20 /* GPIO Ports Clock Enable */}\par
00048   __HAL_RCC_GPIOC_CLK_ENABLE();\par
00049   __HAL_RCC_GPIOB_CLK_ENABLE();\par
00050   __HAL_RCC_GPIOE_CLK_ENABLE();\par
00051   __HAL_RCC_GPIOD_CLK_ENABLE();\par
00052 \par
00053   {\cf20 /*Configure GPIO pin Output Level */}\par
00054   HAL_GPIO_WritePin(GPIOB, Anoda_1_Pin|Anoda_4_Pin|Anoda_2_Pin|Anoda_3_Pin, GPIO_PIN_RESET);\par
00055 \par
00056   {\cf20 /*Configure GPIO pin Output Level */}\par
00057   HAL_GPIO_WritePin(GPIOE, LED_1_Pin|LED_2_Pin, GPIO_PIN_RESET);\par
00058 \par
00059   {\cf20 /*Configure GPIO pin Output Level */}\par
00060   HAL_GPIO_WritePin(GPIOD, Katoda_A_Pin|Katoda_B_Pin|Katoda_C_Pin|Katoda_D_Pin\par
00061                           |Katoda_E_Pin|Katoda_F_Pin|Katoda_G_Pin|Katoda_H_Pin, GPIO_PIN_RESET);\par
00062 \par
00063   {\cf20 /*Configure GPIO pins : PCPin PCPin */}\par
00064   GPIO_InitStruct.Pin = Enkoder_1_Pin|Klawisz_Pin;\par
00065   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;\par
00066   GPIO_InitStruct.Pull = GPIO_PULLUP;\par
00067   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);\par
00068 \par
00069   {\cf20 /*Configure GPIO pins : PBPin PBPin PBPin PBPin */}\par
00070   GPIO_InitStruct.Pin = Anoda_1_Pin|Anoda_4_Pin|Anoda_2_Pin|Anoda_3_Pin;\par
00071   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;\par
00072   GPIO_InitStruct.Pull = GPIO_NOPULL;\par
00073   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\par
00074   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);\par
00075 \par
00076   {\cf20 /*Configure GPIO pins : PEPin PEPin */}\par
00077   GPIO_InitStruct.Pin = LED_1_Pin|LED_2_Pin;\par
00078   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;\par
00079   GPIO_InitStruct.Pull = GPIO_NOPULL;\par
00080   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\par
00081   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);\par
00082 \par
00083   {\cf20 /*Configure GPIO pin : PtPin */}\par
00084   GPIO_InitStruct.Pin = Enkoder_2_Pin;\par
00085   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;\par
00086   GPIO_InitStruct.Pull = GPIO_PULLUP;\par
00087   HAL_GPIO_Init(Enkoder_2_GPIO_Port, &GPIO_InitStruct);\par
00088 \par
00089   {\cf20 /*Configure GPIO pins : PDPin PDPin PDPin PDPin}\par
00090 {\cf20                            PDPin PDPin PDPin PDPin */}\par
00091   GPIO_InitStruct.Pin = Katoda_A_Pin|Katoda_B_Pin|Katoda_C_Pin|Katoda_D_Pin\par
00092                           |Katoda_E_Pin|Katoda_F_Pin|Katoda_G_Pin|Katoda_H_Pin;\par
00093   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;\par
00094   GPIO_InitStruct.Pull = GPIO_NOPULL;\par
00095   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\par
00096   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);\par
00097 \par
00098 \}\par
00099 \par
00100 {\cf20 /* USER CODE BEGIN 2 */}\par
00101 \par
00102 {\cf20 /* USER CODE END 2 */}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dokumentacja pliku Core/Src/main.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/main.c}
{\xe \v Core/Src/main.c}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of all used GPIO pins. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main.h"}\par
{\f2 #include "cmsis_os.h"}\par
{\f2 #include "gpio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definicje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b main_TASK_PRIORITY}\~ (tskIDLE_PRIORITY + 1)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funkcje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemClock_Config} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Clock Configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MX_FREERTOS_Init} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FreeRTOS initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b vApplicationTickHook} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The application entry point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_TIM_PeriodElapsedCallback} (TIM_HandleTypeDef *htim)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Period elapsed callback in non blocking mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Error_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is executed in case of error occurrence. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Zmienne\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned char {\b seg7} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b LED_buf} [4] = \{0,0,0,0\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b LED_ptr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xSemaphoreHandle {\b Tim1s}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xSemaphoreHandle {\b Tim100ms}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xSemaphoreHandle {\b Tim50ms}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xSemaphoreHandle {\b Tim20ms}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xSemaphoreHandle {\b Tim2ms}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xQueueHandle {\b Wys_A}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xQueueHandle {\b Wys_B}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xQueueHandle {\b Wys_C}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xQueueHandle {\b Wys_D}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xQueueHandle {\b HasloJendenZnak}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xQueueHandle {\b ZmianaCyfry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
xQueueHandle {\b ZmianaCyfry2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the configuration of all used GPIO pins. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Uwaga\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}{
Definicja w pliku {\b main.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja definicji\par
\pard\plain 
{\xe \v main_TASK_PRIORITY\:main.c}
{\xe \v main.c\:main_TASK_PRIORITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define main_TASK_PRIORITY\~ (tskIDLE_PRIORITY + 1)}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 38} pliku {\b main.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja funkcji\par
\pard\plain 
{\xe \v Error_Handler\:main.c}
{\xe \v main.c\:Error_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Error_Handler (void )}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is executed in case of error occurrence. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 467} pliku {\b main.c}.}\par
}
{\xe \v HAL_TIM_PeriodElapsedCallback\:main.c}
{\xe \v main.c\:HAL_TIM_PeriodElapsedCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef *  {\i htim})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Period elapsed callback in non blocking mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function is called when TIM6 interrupt took place, inside HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment a global variable "uwTick" used as application time base. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i htim} \cell }{: TIM handle \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 450} pliku {\b main.c}.}\par
}
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (void )}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The application entry point. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i int} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 328} pliku {\b main.c}.}\par
}
{\xe \v MX_FREERTOS_Init\:main.c}
{\xe \v main.c\:MX_FREERTOS_Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MX_FREERTOS_Init (void )}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FreeRTOS initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 112} pliku {\b freertos.c}.}\par
}
{\xe \v SystemClock_Config\:main.c}
{\xe \v main.c\:SystemClock_Config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SystemClock_Config (void )}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System Clock Configuration. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the RCC Oscillators according to the specified parameters in the RCC_OscInitTypeDef structure.\par
Initializes the CPU, AHB and APB buses clocks\par
Configure the Systick interrupt time\par
}{
Definicja w linii {\b 397} pliku {\b main.c}.}\par
}
{\xe \v vApplicationTickHook\:main.c}
{\xe \v main.c\:vApplicationTickHook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void vApplicationTickHook (void )}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 284} pliku {\b main.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja zmiennych\par
\pard\plain 
{\xe \v HasloJendenZnak\:main.c}
{\xe \v main.c\:HasloJendenZnak}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xQueueHandle HasloJendenZnak}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 73} pliku {\b main.c}.}\par
}
{\xe \v LED_buf\:main.c}
{\xe \v main.c\:LED_buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint8_t LED_buf[4] = \{0,0,0,0\}}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 54} pliku {\b main.c}.}\par
}
{\xe \v LED_ptr\:main.c}
{\xe \v main.c\:LED_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint8_t LED_ptr}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 55} pliku {\b main.c}.}\par
}
{\xe \v seg7\:main.c}
{\xe \v main.c\:seg7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char seg7[]}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Warto\'9C\'E6 pocz\'B9tkowa:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{0xC0, 0xF9, 0xA4, 0xB0,\par
                              0x99, 0x92, 0x82, 0xF8,\par
                              0x80, 0x90, 0x5F\}\par
}
{
Definicja w linii {\b 50} pliku {\b main.c}.}\par
}
{\xe \v Tim100ms\:main.c}
{\xe \v main.c\:Tim100ms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xSemaphoreHandle Tim100ms}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 63} pliku {\b main.c}.}\par
}
{\xe \v Tim1s\:main.c}
{\xe \v main.c\:Tim1s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xSemaphoreHandle Tim1s}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 62} pliku {\b main.c}.}\par
}
{\xe \v Tim20ms\:main.c}
{\xe \v main.c\:Tim20ms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xSemaphoreHandle Tim20ms}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 65} pliku {\b main.c}.}\par
}
{\xe \v Tim2ms\:main.c}
{\xe \v main.c\:Tim2ms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xSemaphoreHandle Tim2ms}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 66} pliku {\b main.c}.}\par
}
{\xe \v Tim50ms\:main.c}
{\xe \v main.c\:Tim50ms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xSemaphoreHandle Tim50ms}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 64} pliku {\b main.c}.}\par
}
{\xe \v Wys_A\:main.c}
{\xe \v main.c\:Wys_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xQueueHandle Wys_A}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 68} pliku {\b main.c}.}\par
}
{\xe \v Wys_B\:main.c}
{\xe \v main.c\:Wys_B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xQueueHandle Wys_B}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 69} pliku {\b main.c}.}\par
}
{\xe \v Wys_C\:main.c}
{\xe \v main.c\:Wys_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xQueueHandle Wys_C}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 70} pliku {\b main.c}.}\par
}
{\xe \v Wys_D\:main.c}
{\xe \v main.c\:Wys_D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xQueueHandle Wys_D}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 71} pliku {\b main.c}.}\par
}
{\xe \v ZmianaCyfry\:main.c}
{\xe \v main.c\:ZmianaCyfry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xQueueHandle ZmianaCyfry}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 74} pliku {\b main.c}.}\par
}
{\xe \v ZmianaCyfry2\:main.c}
{\xe \v main.c\:ZmianaCyfry2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
xQueueHandle ZmianaCyfry2}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 75} pliku {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/main.c}
{\xe \v Core/Src/main.c}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Id\'9F do dokumentacji tego pliku.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* USER CODE BEGIN Header */}\par
00020 {\cf20 /* USER CODE END Header */}\par
00021 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
00022 {\cf21 #include "main.h"}\par
00023 {\cf21 #include "cmsis_os.h"}\par
00024 {\cf21 #include "gpio.h"}\par
00025 \par
00026 {\cf20 /* Private includes ----------------------------------------------------------*/}\par
00027 {\cf20 /* USER CODE BEGIN Includes */}\par
00028 \par
00029 {\cf20 /* USER CODE END Includes */}\par
00030 \par
00031 {\cf20 /* Private typedef -----------------------------------------------------------*/}\par
00032 {\cf20 /* USER CODE BEGIN PTD */}\par
00033 \par
00034 {\cf20 /* USER CODE END PTD */}\par
00035 \par
00036 {\cf20 /* Private define ------------------------------------------------------------*/}\par
00037 {\cf20 /* USER CODE BEGIN PD */}\par
00038 {\cf21 #define main_TASK_PRIORITY (tskIDLE_PRIORITY + 1)}\par
00039 {\cf20 /* USER CODE END PD */}\par
00040 \par
00041 {\cf20 /* Private macro -------------------------------------------------------------*/}\par
00042 {\cf20 /* USER CODE BEGIN PM */}\par
00043 \par
00044 {\cf20 /* USER CODE END PM */}\par
00045 \par
00046 {\cf20 /* Private variables ---------------------------------------------------------*/}\par
00047 \par
00048 {\cf20 /* USER CODE BEGIN PV */}\par
00049 \par
00050 {\cf17 const} {\cf18 unsigned} {\cf18 char} seg7[] = \{0xC0, 0xF9, 0xA4, 0xB0,\par
00051                               0x99, 0x92, 0x82, 0xF8,\par
00052                               0x80, 0x90, 0x5F\};\par
00053 \par
00054 {\cf17 volatile} uint8_t LED_buf[4] = \{0,0,0,0\};\par
00055 {\cf17 volatile} uint8_t LED_ptr;\par
00056 {\cf20 /* USER CODE END PV */}\par
00057 \par
00058 {\cf20 /* Private function prototypes -----------------------------------------------*/}\par
00059 {\cf18 void} SystemClock_Config({\cf18 void});\par
00060 {\cf18 void} MX_FREERTOS_Init({\cf18 void});\par
00061 {\cf20 /* USER CODE BEGIN PFP */}\par
00062 xSemaphoreHandle Tim1s;\par
00063 xSemaphoreHandle Tim100ms;\par
00064 xSemaphoreHandle Tim50ms;\par
00065 xSemaphoreHandle Tim20ms;\par
00066 xSemaphoreHandle Tim2ms;\par
00067 \par
00068 xQueueHandle Wys_A;\par
00069 xQueueHandle Wys_B;\par
00070 xQueueHandle Wys_C;\par
00071 xQueueHandle Wys_D;\par
00072 \par
00073 xQueueHandle HasloJendenZnak;\par
00074 xQueueHandle ZmianaCyfry;\par
00075 xQueueHandle ZmianaCyfry2;\par
00076 {\cf20 /* USER CODE END PFP */}\par
00077 \par
00078 {\cf20 /* Private user code ---------------------------------------------------------*/}\par
00079 {\cf20 /* USER CODE BEGIN 0 */}\par
00093 {\cf17 static} {\cf18 void} vTask1({\cf18 void} *pvParameters);\par
00094 {\cf17 static} {\cf18 void} vTask1({\cf18 void} *pvParameters)\par
00095 \{\par
00096   {\cf17 static} uint8_t znak[4] = \{0,0,0,0\};\par
00097     uint8_t wyswietl = 0;\par
00098     \par
00099     {\cf19 for}( ;; )\par
00100     \{\par
00101         {\cf19 if} (xSemaphoreTake(Tim2ms, portMAX_DELAY))\par
00102         \{\par
00103             xQueueReceive(Wys_A, &znak[0], ( TickType_t ) 0 );\par
00104             xQueueReceive(Wys_B, &znak[1], ( TickType_t ) 0 );\par
00105             xQueueReceive(Wys_C, &znak[2], ( TickType_t ) 0 );\par
00106             xQueueReceive(Wys_D, &znak[3], ( TickType_t ) 0 );\par
00107       xQueueReceive(ZmianaCyfry2, &wyswietl, (TickType_t)0);\par
00108             LED_buf[0] = seg7[znak[0]];\par
00109             LED_buf[1] = seg7[znak[1]];\par
00110             LED_buf[2] = seg7[znak[2]];\par
00111             LED_buf[3] = seg7[znak[3]];\par
00112           {\cf20 // obsluga wyswietlacza siedmiosegmentowego LED}\par
00113       {\cf20 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++}\par
00114       {\cf19 if} ((++LED_ptr) > 3) LED_ptr = 0;\par
00115 \par
00116             \par
00117             \par
00118             \par
00119             \par
00120       HAL_GPIO_WritePin(Anoda_1_GPIO_Port, Anoda_4_Pin|Anoda_3_Pin|Anoda_2_Pin\par
00121                                           |Anoda_1_Pin, GPIO_PIN_RESET);\par
00122           {\cf20 // ustawienie segmentow}\par
00123       Katoda_A_GPIO_Port->BSRR = (uint32_t)LED_buf[wyswietl];\par
00124           Katoda_A_GPIO_Port->BSRR = (uint32_t)(~LED_buf[wyswietl]) << 16;\par
00125         \par
00126           {\cf20 // wybor wyswietlacza}\par
00127       {\cf19 switch} (wyswietl)\par
00128       \{\par
00129         {\cf19 case} 0: HAL_GPIO_WritePin(Anoda_1_GPIO_Port, Anoda_1_Pin, GPIO_PIN_SET);\par
00130                 {\cf19 break};\par
00131         {\cf19 case} 1: HAL_GPIO_WritePin(Anoda_2_GPIO_Port, Anoda_2_Pin, GPIO_PIN_SET);\par
00132                 {\cf19 break};\par
00133         {\cf19 case} 2: HAL_GPIO_WritePin(Anoda_3_GPIO_Port, Anoda_3_Pin, GPIO_PIN_SET);\par
00134                 {\cf19 break};\par
00135         {\cf19 case} 3: HAL_GPIO_WritePin(Anoda_4_GPIO_Port, Anoda_4_Pin, GPIO_PIN_SET);\par
00136                 {\cf19 break};\par
00137       \}\par
00138     {\cf20 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++}\par
00139             \par
00140         \}\par
00141     \}\par
00142 \}\par
00143 {\cf17 static} {\cf18 void} vTask2({\cf18 void} *pvParameters);\par
00144 {\cf17 static} {\cf18 void} vTask2({\cf18 void} *pvParameters)\par
00145 \{\par
00146   {\cf17 static} uint8_t dane_enkoder = 0;\par
00147   {\cf17 static} uint8_t klawisz_enkoder = 0;\par
00148   {\cf17 static} uint8_t dane_wyswietlacz[4] = \{0, 0, 0, 0\};\par
00149 \par
00150   {\cf19 for}(;;)\par
00151   \{\par
00152     {\cf19 if}(xSemaphoreTake(Tim50ms, portMAX_DELAY))\par
00153     \{\par
00154       xQueueReceive(HasloJendenZnak, &dane_enkoder, (TickType_t)0);\par
00155       xQueueReceive(ZmianaCyfry, &klawisz_enkoder, (TickType_t)0);\par
00156       dane_wyswietlacz[klawisz_enkoder] = dane_enkoder;\par
00157       {\cf19 if}(klawisz_enkoder == 4)\par
00158       \{\par
00159         {\cf19 if}(dane_wyswietlacz[0] == 1 && dane_wyswietlacz[1] == 2 && dane_wyswietlacz[2] == 3 && dane_wyswietlacz[3]== 4)\par
00160         \{\par
00161           HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, GPIO_PIN_RESET);\par
00162                     HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, GPIO_PIN_RESET);\par
00163         \}\par
00164       \}\par
00165       {\cf19 else}\par
00166       \{\par
00167         HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, GPIO_PIN_SET);\par
00168         HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, GPIO_PIN_SET);\par
00169       \}\par
00170             xQueueSend(Wys_A , &dane_wyswietlacz[0], portMAX_DELAY);\par
00171             xQueueSend(Wys_B , &dane_wyswietlacz[1], portMAX_DELAY);\par
00172             xQueueSend(Wys_C , &dane_wyswietlacz[2], portMAX_DELAY);\par
00173             xQueueSend(Wys_D , &dane_wyswietlacz[3], portMAX_DELAY);\par
00174     \}\par
00175   \}\par
00176 \}\par
00177 {\cf17 static} {\cf18 void} vTask3({\cf18 void} *pvParameters);\par
00178 {\cf17 static} {\cf18 void} vTask3({\cf18 void} *pvParameters)\par
00179 \{\par
00180   {\cf17 static} uint8_t EnkoderWartosc = 0;\par
00181     {\cf17 static} uint8_t flaga_zmiany = 0;\par
00182   {\cf17 static} uint8_t klawiszWyswietlacza = 0;\par
00183     {\cf17 static} uint8_t debouncer = 0, klawisz = 0;\par
00184     {\cf17 static} uint8_t left = 0, right = 0;\par
00185 \par
00186   {\cf19 for}(;;)\par
00187   \{\par
00188     {\cf19 if} (xSemaphoreTake(Tim2ms, portMAX_DELAY))\par
00189         \{\par
00190             left = !HAL_GPIO_ReadPin(Enkoder_1_GPIO_Port, Enkoder_1_Pin);\par
00191             right = !HAL_GPIO_ReadPin(Enkoder_2_GPIO_Port, Enkoder_2_Pin);\par
00192             {\cf19 switch}(debouncer)\par
00193             \{\par
00194                 {\cf19 case} 0: {\cf20 //00}\par
00195                     {\cf19 if}(left&&!right) debouncer = 1;\par
00196                     {\cf19 if}(!left&&right) debouncer = 4;\par
00197                     {\cf19 break};\par
00198                 {\cf19 case} 1: {\cf20 //01}\par
00199                     {\cf19 if}(left&&!right) debouncer = 1;\par
00200                     {\cf19 else}\{ {\cf19 if}(left&&right) debouncer = 2;\par
00201                     {\cf19 else} debouncer = 0;\}\par
00202                     {\cf19 break};\par
00203                 {\cf19 case} 2: {\cf20 //11}\par
00204                     {\cf19 if}(left&&right) debouncer = 2;\par
00205                     {\cf19 else}\{ {\cf19 if}(!left&&right) debouncer = 3;\par
00206                     {\cf19 else} debouncer = 1;\}\par
00207                     {\cf19 break};\par
00208                 {\cf19 case} 3: {\cf20 //10}\par
00209                     {\cf19 if}(!left&&right) debouncer = 3;\par
00210                     {\cf19 else}\{ {\cf19 if}(!left&&!right)\par
00211                     \{\par
00212                         {\cf19 if}(flaga_zmiany == 0)\par
00213                         \{\par
00214                         {\cf19 if}(EnkoderWartosc == 0 ) EnkoderWartosc = 9;\par
00215                         {\cf19 else} EnkoderWartosc--;\par
00216                         flaga_zmiany = 1;\par
00217                         \}\par
00218                         debouncer = 0;\par
00219                     \}\par
00220                     {\cf19 else} debouncer = 2;\}\par
00221                     {\cf19 break};\par
00222                 {\cf19 case} 4: {\cf20 //10}\par
00223                     {\cf19 if}(!left&&right) debouncer = 4;\par
00224                     {\cf19 else}\{ {\cf19 if}(left&&right) debouncer = 5;\par
00225                     {\cf19 else} debouncer = 0;\}\par
00226                     {\cf19 break};\par
00227                 {\cf19 case} 5: {\cf20 //11}\par
00228                     {\cf19 if}(left&&right) debouncer = 5;\par
00229                     {\cf19 else}\{ {\cf19 if}(left&&!right) debouncer = 6;\par
00230                     {\cf19 else} debouncer = 3;\}\par
00231                     {\cf19 break};\par
00232                 {\cf19 case} 6: {\cf20 //01}\par
00233                     {\cf19 if}(left&&!right) debouncer = 6;\par
00234                     {\cf19 else}\{ {\cf19 if}(!left&&!right)\par
00235                     \{\par
00236                         {\cf19 if}(flaga_zmiany == 0)\par
00237                         \{\par
00238                         {\cf19 if}(EnkoderWartosc == 9) EnkoderWartosc = 0; \par
00239                         {\cf19 else} EnkoderWartosc++;\par
00240                         flaga_zmiany = 1;\par
00241                         \}\par
00242                         debouncer = 0;\par
00243                     \}\par
00244                     {\cf19 else} debouncer = 5;\}\par
00245                     {\cf19 break};\par
00246 \par
00247             \}\par
00248         \}\par
00249         flaga_zmiany = 0;\par
00250         {\cf19 if} (xSemaphoreTake(Tim20ms, portMAX_DELAY))\par
00251         \{\par
00252       {\cf19 switch}(klawisz)\par
00253             \{\par
00254                 {\cf19 case} 0:\par
00255                     {\cf19 if}(HAL_GPIO_ReadPin(Klawisz_GPIO_Port, Klawisz_Pin))klawisz=0;\par
00256                     {\cf19 else} klawisz=1;\par
00257                     {\cf19 break};\par
00258                 {\cf19 case} 1:\par
00259                     {\cf19 if}(HAL_GPIO_ReadPin(Klawisz_GPIO_Port, Klawisz_Pin))klawisz=1;\par
00260                     {\cf19 else}\par
00261                         \{\par
00262                             {\cf19 if}(klawiszWyswietlacza == 4) klawiszWyswietlacza = 0;\par
00263                             {\cf19 else} klawiszWyswietlacza++;\par
00264                             EnkoderWartosc = 0;\par
00265                             klawisz=2;\par
00266                         \}\par
00267                     {\cf19 break};\par
00268                 {\cf19 case} 2:\par
00269                     {\cf19 if}(!HAL_GPIO_ReadPin(Klawisz_GPIO_Port, Klawisz_Pin))klawisz=2;\par
00270                     {\cf19 else} klawisz=3;\par
00271                     {\cf19 break};\par
00272                 {\cf19 case} 3:\par
00273                     {\cf19 if}(!HAL_GPIO_ReadPin(Klawisz_GPIO_Port, Klawisz_Pin))klawisz=3;\par
00274                     {\cf19 else} klawisz=0;\par
00275                     {\cf19 break};\par
00276             \}\par
00277         \}\par
00278             xQueueSend(HasloJendenZnak , &EnkoderWartosc, portMAX_DELAY);\par
00279             xQueueSend(ZmianaCyfry , &klawiszWyswietlacza, portMAX_DELAY);\par
00280             xQueueSend(ZmianaCyfry2 , &klawiszWyswietlacza, portMAX_DELAY);\par
00281   \}\par
00282 \}\par
00283 \par
00284 {\cf18 void} vApplicationTickHook({\cf18 void})\par
00285 \{\par
00286   {\cf17 static} uint8_t time1s = 0;\par
00287   {\cf17 static} uint8_t time100ms = 0;\par
00288   {\cf17 static} uint8_t time50ms = 0;\par
00289   {\cf17 static} uint8_t time20ms = 0;\par
00290   {\cf17 static} uint8_t time2ms = 0;\par
00291   {\cf18 signed} portBASE_TYPE xHigherPriorityTaskWoken = pdFALSE;\par
00292 \par
00293         {\cf19 if} (time2ms++ > 1)\par
00294         \{\par
00295             time2ms = 0;\par
00296             xSemaphoreGiveFromISR(Tim2ms, &xHigherPriorityTaskWoken);\par
00297         \}\par
00298     {\cf19 if} (time1s++ > 250)\par
00299     \{\par
00300             time1s = 0;\par
00301       xSemaphoreGiveFromISR(Tim1s, &xHigherPriorityTaskWoken);\par
00302     \}\par
00303         {\cf19 if} (time100ms++ >50)\par
00304         \{\par
00305             time100ms = 0;\par
00306             xSemaphoreGiveFromISR(Tim100ms, &xHigherPriorityTaskWoken);\par
00307         \}\par
00308         {\cf19 if} (time50ms++ >25)\par
00309         \{\par
00310             time50ms = 0;\par
00311             xSemaphoreGiveFromISR(Tim50ms, &xHigherPriorityTaskWoken);\par
00312         \}\par
00313         {\cf19 if} (time20ms++ >10)\par
00314         \{\par
00315             time20ms = 0;\par
00316             xSemaphoreGiveFromISR(Tim20ms, &xHigherPriorityTaskWoken);\par
00317         \}\par
00318     \par
00319   \par
00320   {\cf19 if} (xHigherPriorityTaskWoken == pdTRUE) taskYIELD();\par
00321 \}\par
00322 {\cf20 /* USER CODE END 0 */}\par
00323 \par
00328 {\cf18 int} main({\cf18 void})\par
00329 \{\par
00330   {\cf20 /* USER CODE BEGIN 1 */}\par
00331 \par
00332   {\cf20 /* USER CODE END 1 */}\par
00333 \par
00334   {\cf20 /* MCU Configuration--------------------------------------------------------*/}\par
00335 \par
00336   {\cf20 /* Reset of all peripherals, Initializes the Flash interface and the Systick. */}\par
00337   HAL_Init();\par
00338 \par
00339   {\cf20 /* USER CODE BEGIN Init */}\par
00340 \par
00341   {\cf20 /* USER CODE END Init */}\par
00342 \par
00343   {\cf20 /* Configure the system clock */}\par
00344   SystemClock_Config();\par
00345 \par
00346   {\cf20 /* USER CODE BEGIN SysInit */}\par
00347 \par
00348   {\cf20 /* USER CODE END SysInit */}\par
00349 \par
00350   {\cf20 /* Initialize all configured peripherals */}\par
00351   MX_GPIO_Init();\par
00352   {\cf20 /* USER CODE BEGIN 2 */}\par
00353   HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, GPIO_PIN_SET);\par
00354   HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, GPIO_PIN_SET);\par
00355 \par
00356   vSemaphoreCreateBinary(Tim1s);\par
00357   vSemaphoreCreateBinary(Tim100ms);\par
00358     vSemaphoreCreateBinary(Tim50ms);\par
00359   vSemaphoreCreateBinary(Tim20ms);\par
00360   vSemaphoreCreateBinary(Tim2ms);\par
00361 \par
00362   Wys_A = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00363     Wys_B = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00364     Wys_C = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00365     Wys_D = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00366 \par
00367   HasloJendenZnak = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00368   ZmianaCyfry = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00369   ZmianaCyfry2 = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00370   \par
00371   xTaskCreate(vTask1, {\cf22 "WyswietlaczSiedmioSegmentowy"}, configMINIMAL_STACK_SIZE, NULL, main_TASK_PRIORITY, NULL);\par
00372     xTaskCreate(vTask2, {\cf22 "PorownywanieHasla"}, configMINIMAL_STACK_SIZE, NULL, main_TASK_PRIORITY, NULL);\par
00373     xTaskCreate(vTask3, {\cf22 "ObslugaEnkodera"}, configMINIMAL_STACK_SIZE, NULL, main_TASK_PRIORITY, NULL);\par
00374   {\cf20 /* USER CODE END 2 */}\par
00375 \par
00376   {\cf20 /* Call init function for freertos objects (in freertos.c) */}\par
00377   MX_FREERTOS_Init();\par
00378   {\cf20 /* Start scheduler */}\par
00379   osKernelStart();\par
00380 \par
00381   {\cf20 /* We should never get here as control is now taken by the scheduler */}\par
00382   {\cf20 /* Infinite loop */}\par
00383   {\cf20 /* USER CODE BEGIN WHILE */}\par
00384   {\cf19 while} (1)\par
00385   \{\par
00386     {\cf20 /* USER CODE END WHILE */}\par
00387 \par
00388     {\cf20 /* USER CODE BEGIN 3 */}\par
00389   \}\par
00390   {\cf20 /* USER CODE END 3 */}\par
00391 \}\par
00392 \par
00397 {\cf18 void} SystemClock_Config({\cf18 void})\par
00398 \{\par
00399   RCC_OscInitTypeDef RCC_OscInitStruct = \{0\};\par
00400   RCC_ClkInitTypeDef RCC_ClkInitStruct = \{0\};\par
00401 \par
00405   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;\par
00406   RCC_OscInitStruct.HSEState = RCC_HSE_ON;\par
00407   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;\par
00408   RCC_OscInitStruct.HSIState = RCC_HSI_ON;\par
00409   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;\par
00410   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;\par
00411   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;\par
00412   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;\par
00413   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;\par
00414   RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL10;\par
00415   RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV2;\par
00416   {\cf19 if} (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)\par
00417   \{\par
00418     Error_Handler();\par
00419   \}\par
00422   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK\par
00423                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;\par
00424   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;\par
00425   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;\par
00426   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;\par
00427   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;\par
00428 \par
00429   {\cf19 if} (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)\par
00430   \{\par
00431     Error_Handler();\par
00432   \}\par
00435   __HAL_RCC_PLLI2S_ENABLE();\par
00436 \}\par
00437 \par
00438 {\cf20 /* USER CODE BEGIN 4 */}\par
00439 \par
00440 {\cf20 /* USER CODE END 4 */}\par
00441 \par
00450 {\cf18 void} HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)\par
00451 \{\par
00452   {\cf20 /* USER CODE BEGIN Callback 0 */}\par
00453 \par
00454   {\cf20 /* USER CODE END Callback 0 */}\par
00455   {\cf19 if} (htim->Instance == TIM6) \{\par
00456     HAL_IncTick();\par
00457   \}\par
00458   {\cf20 /* USER CODE BEGIN Callback 1 */}\par
00459 \par
00460   {\cf20 /* USER CODE END Callback 1 */}\par
00461 \}\par
00462 \par
00467 {\cf18 void} Error_Handler({\cf18 void})\par
00468 \{\par
00469   {\cf20 /* USER CODE BEGIN Error_Handler_Debug */}\par
00470   {\cf20 /* User can add his own implementation to report the HAL error return state */}\par
00471   __disable_irq();\par
00472   {\cf19 while} (1)\par
00473   \{\par
00474   \}\par
00475   {\cf20 /* USER CODE END Error_Handler_Debug */}\par
00476 \}\par
00477 \par
00478 {\cf21 #ifdef  USE_FULL_ASSERT}\par
00486 {\cf18 void} assert_failed(uint8_t *file, uint32_t line)\par
00487 \{\par
00488   {\cf20 /* USER CODE BEGIN 6 */}\par
00489   {\cf20 /* User can add his own implementation to report the file name and line number,}\par
00490 {\cf20      ex: printf("Wrong parameters value: file %s on line %d\\r\\n", file, line) */}\par
00491   {\cf20 /* USER CODE END 6 */}\par
00492 \}\par
00493 {\cf21 #endif }{\cf20 /* USE_FULL_ASSERT */}{\cf21 }\par
00494 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dokumentacja pliku Core/Src/stm32f1xx_hal_msp.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/stm32f1xx_hal_msp.c}
{\xe \v Core/Src/stm32f1xx_hal_msp.c}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funkcje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_MspInit} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides code for the MSP Initialization and de-Initialization codes. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Uwaga\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}{
Definicja w pliku {\b stm32f1xx_hal_msp.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja funkcji\par
\pard\plain 
{\xe \v HAL_MspInit\:stm32f1xx_hal_msp.c}
{\xe \v stm32f1xx_hal_msp.c\:HAL_MspInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_MspInit (void )}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the Global MSP. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DISABLE: JTAG-DP Disabled and SW-DP Disabled\par
}{
Definicja w linii {\b 63} pliku {\b stm32f1xx_hal_msp.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stm32f1xx_hal_msp.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/stm32f1xx_hal_msp.c}
{\xe \v Core/Src/stm32f1xx_hal_msp.c}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Id\'9F do dokumentacji tego pliku.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* USER CODE BEGIN Header */}\par
00019 {\cf20 /* USER CODE END Header */}\par
00020 \par
00021 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
00022 {\cf21 #include "main.h"}\par
00023 {\cf20 /* USER CODE BEGIN Includes */}\par
00024 \par
00025 {\cf20 /* USER CODE END Includes */}\par
00026 \par
00027 {\cf20 /* Private typedef -----------------------------------------------------------*/}\par
00028 {\cf20 /* USER CODE BEGIN TD */}\par
00029 \par
00030 {\cf20 /* USER CODE END TD */}\par
00031 \par
00032 {\cf20 /* Private define ------------------------------------------------------------*/}\par
00033 {\cf20 /* USER CODE BEGIN Define */}\par
00034 \par
00035 {\cf20 /* USER CODE END Define */}\par
00036 \par
00037 {\cf20 /* Private macro -------------------------------------------------------------*/}\par
00038 {\cf20 /* USER CODE BEGIN Macro */}\par
00039 \par
00040 {\cf20 /* USER CODE END Macro */}\par
00041 \par
00042 {\cf20 /* Private variables ---------------------------------------------------------*/}\par
00043 {\cf20 /* USER CODE BEGIN PV */}\par
00044 \par
00045 {\cf20 /* USER CODE END PV */}\par
00046 \par
00047 {\cf20 /* Private function prototypes -----------------------------------------------*/}\par
00048 {\cf20 /* USER CODE BEGIN PFP */}\par
00049 \par
00050 {\cf20 /* USER CODE END PFP */}\par
00051 \par
00052 {\cf20 /* External functions --------------------------------------------------------*/}\par
00053 {\cf20 /* USER CODE BEGIN ExternalFunctions */}\par
00054 \par
00055 {\cf20 /* USER CODE END ExternalFunctions */}\par
00056 \par
00057 {\cf20 /* USER CODE BEGIN 0 */}\par
00058 \par
00059 {\cf20 /* USER CODE END 0 */}\par
00063 {\cf18 void} HAL_MspInit({\cf18 void})\par
00064 \{\par
00065   {\cf20 /* USER CODE BEGIN MspInit 0 */}\par
00066 \par
00067   {\cf20 /* USER CODE END MspInit 0 */}\par
00068 \par
00069   __HAL_RCC_AFIO_CLK_ENABLE();\par
00070   __HAL_RCC_PWR_CLK_ENABLE();\par
00071 \par
00072   {\cf20 /* System interrupt init*/}\par
00073   {\cf20 /* PendSV_IRQn interrupt configuration */}\par
00074   HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);\par
00075 \par
00078   __HAL_AFIO_REMAP_SWJ_DISABLE();\par
00079 \par
00080   {\cf20 /* USER CODE BEGIN MspInit 1 */}\par
00081 \par
00082   {\cf20 /* USER CODE END MspInit 1 */}\par
00083 \}\par
00084 \par
00085 {\cf20 /* USER CODE BEGIN 1 */}\par
00086 \par
00087 {\cf20 /* USER CODE END 1 */}\par
00088 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dokumentacja pliku Core/Src/stm32f1xx_hal_timebase_tim.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/stm32f1xx_hal_timebase_tim.c}
{\xe \v Core/Src/stm32f1xx_hal_timebase_tim.c}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f1xx_hal.h"}\par
{\f2 #include "stm32f1xx_hal_tim.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funkcje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HAL_StatusTypeDef {\b HAL_InitTick} (uint32_t TickPriority)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function configures the TIM6 as a time base source. The time source is configured to have 1ms time base with a dedicated Tick interrupt priority. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_SuspendTick} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Suspend Tick increment. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HAL_ResumeTick} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume Tick increment. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Zmienne\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TIM_HandleTypeDef {\b htim6}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
HAL time base based on the hardware TIM. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Uwaga\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}{
Definicja w pliku {\b stm32f1xx_hal_timebase_tim.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja funkcji\par
\pard\plain 
{\xe \v HAL_InitTick\:stm32f1xx_hal_timebase_tim.c}
{\xe \v stm32f1xx_hal_timebase_tim.c\:HAL_InitTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HAL_StatusTypeDef HAL_InitTick (uint32_t  {\i TickPriority})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function configures the TIM6 as a time base source. The time source is configured to have 1ms time base with a dedicated Tick interrupt priority. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function is called automatically at the beginning of program after reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TickPriority} \cell }{Tick interrupt priority. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i HAL} \cell }{status \cell }
{\row }
}
}{
Definicja w linii {\b 41} pliku {\b stm32f1xx_hal_timebase_tim.c}.}\par
}
{\xe \v HAL_ResumeTick\:stm32f1xx_hal_timebase_tim.c}
{\xe \v stm32f1xx_hal_timebase_tim.c\:HAL_ResumeTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_ResumeTick (void )}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume Tick increment. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Enable the tick increment by Enabling TIM6 update interrupt. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 106} pliku {\b stm32f1xx_hal_timebase_tim.c}.}\par
}
{\xe \v HAL_SuspendTick\:stm32f1xx_hal_timebase_tim.c}
{\xe \v stm32f1xx_hal_timebase_tim.c\:HAL_SuspendTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HAL_SuspendTick (void )}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Suspend Tick increment. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Nota\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Disable the tick increment by disabling TIM6 update interrupt. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parametry\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Zwracane warto\'9Cci\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i None} \cell }{\cell }
{\row }
}
}{
Definicja w linii {\b 94} pliku {\b stm32f1xx_hal_timebase_tim.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja zmiennych\par
\pard\plain 
{\xe \v htim6\:stm32f1xx_hal_timebase_tim.c}
{\xe \v stm32f1xx_hal_timebase_tim.c\:htim6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TIM_HandleTypeDef htim6}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 28} pliku {\b stm32f1xx_hal_timebase_tim.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stm32f1xx_hal_timebase_tim.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/stm32f1xx_hal_timebase_tim.c}
{\xe \v Core/Src/stm32f1xx_hal_timebase_tim.c}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Id\'9F do dokumentacji tego pliku.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* USER CODE BEGIN Header */}\par
00018 {\cf20 /* USER CODE END Header */}\par
00019 \par
00020 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
00021 {\cf21 #include "stm32f1xx_hal.h"}\par
00022 {\cf21 #include "stm32f1xx_hal_tim.h"}\par
00023 \par
00024 {\cf20 /* Private typedef -----------------------------------------------------------*/}\par
00025 {\cf20 /* Private define ------------------------------------------------------------*/}\par
00026 {\cf20 /* Private macro -------------------------------------------------------------*/}\par
00027 {\cf20 /* Private variables ---------------------------------------------------------*/}\par
00028 TIM_HandleTypeDef        htim6;\par
00029 {\cf20 /* Private function prototypes -----------------------------------------------*/}\par
00030 {\cf20 /* Private functions ---------------------------------------------------------*/}\par
00031 \par
00041 HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)\par
00042 \{\par
00043   RCC_ClkInitTypeDef    clkconfig;\par
00044   uint32_t              uwTimclock = 0;\par
00045   uint32_t              uwPrescalerValue = 0;\par
00046   uint32_t              pFLatency;\par
00047   {\cf20 /*Configure the TIM6 IRQ priority */}\par
00048   HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority ,0);\par
00049 \par
00050   {\cf20 /* Enable the TIM6 global Interrupt */}\par
00051   HAL_NVIC_EnableIRQ(TIM6_IRQn);\par
00052 \par
00053   {\cf20 /* Enable TIM6 clock */}\par
00054   __HAL_RCC_TIM6_CLK_ENABLE();\par
00055 \par
00056   {\cf20 /* Get clock configuration */}\par
00057   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);\par
00058 \par
00059   {\cf20 /* Compute TIM6 clock */}\par
00060   uwTimclock = 2*HAL_RCC_GetPCLK1Freq();\par
00061   {\cf20 /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */}\par
00062   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);\par
00063 \par
00064   {\cf20 /* Initialize TIM6 */}\par
00065   htim6.Instance = TIM6;\par
00066 \par
00067   {\cf20 /* Initialize TIMx peripheral as follow:}\par
00068 {\cf20   + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.}\par
00069 {\cf20   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.}\par
00070 {\cf20   + ClockDivision = 0}\par
00071 {\cf20   + Counter direction = Up}\par
00072 {\cf20   */}\par
00073   htim6.Init.Period = (1000000U / 1000U) - 1U;\par
00074   htim6.Init.Prescaler = uwPrescalerValue;\par
00075   htim6.Init.ClockDivision = 0;\par
00076   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;\par
00077 \par
00078   {\cf19 if}(HAL_TIM_Base_Init(&htim6) == HAL_OK)\par
00079   \{\par
00080     {\cf20 /* Start the TIM time Base generation in interrupt mode */}\par
00081     {\cf19 return} HAL_TIM_Base_Start_IT(&htim6);\par
00082   \}\par
00083 \par
00084   {\cf20 /* Return function status */}\par
00085   {\cf19 return} HAL_ERROR;\par
00086 \}\par
00087 \par
00094 {\cf18 void} HAL_SuspendTick({\cf18 void})\par
00095 \{\par
00096   {\cf20 /* Disable TIM6 update Interrupt */}\par
00097   __HAL_TIM_DISABLE_IT(&htim6, TIM_IT_UPDATE);\par
00098 \}\par
00099 \par
00106 {\cf18 void} HAL_ResumeTick({\cf18 void})\par
00107 \{\par
00108   {\cf20 /* Enable TIM6 Update interrupt */}\par
00109   __HAL_TIM_ENABLE_IT(&htim6, TIM_IT_UPDATE);\par
00110 \}\par
00111 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dokumentacja pliku Core/Src/stm32f1xx_it.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/stm32f1xx_it.c}
{\xe \v Core/Src/stm32f1xx_it.c}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Service Routines. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "main.h"}\par
{\f2 #include "stm32f1xx_it.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funkcje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NMI_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Non maskable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HardFault_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Hard fault interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MemManage_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Memory management fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BusFault_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Prefetch fault, memory access fault. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UsageFault_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Undefined instruction or illegal state. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugMon_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Debug monitor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TIM6_IRQHandler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles TIM6 global interrupt. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Zmienne\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TIM_HandleTypeDef {\b htim6}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Service Routines. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Uwaga\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}Copyright (c) 2023 STMicroelectronics. All rights reserved.\par
This software is licensed under terms that can be found in the LICENSE file in the root directory of this software component. If no LICENSE file comes with this software, it is provided AS-IS. \par
}{
Definicja w pliku {\b stm32f1xx_it.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja funkcji\par
\pard\plain 
{\xe \v BusFault_Handler\:stm32f1xx_it.c}
{\xe \v stm32f1xx_it.c\:BusFault_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BusFault_Handler (void )}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Prefetch fault, memory access fault. }}\par
{
Definicja w linii {\b 115} pliku {\b stm32f1xx_it.c}.}\par
}
{\xe \v DebugMon_Handler\:stm32f1xx_it.c}
{\xe \v stm32f1xx_it.c\:DebugMon_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DebugMon_Handler (void )}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Debug monitor. }}\par
{
Definicja w linii {\b 145} pliku {\b stm32f1xx_it.c}.}\par
}
{\xe \v HardFault_Handler\:stm32f1xx_it.c}
{\xe \v stm32f1xx_it.c\:HardFault_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HardFault_Handler (void )}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Hard fault interrupt. }}\par
{
Definicja w linii {\b 85} pliku {\b stm32f1xx_it.c}.}\par
}
{\xe \v MemManage_Handler\:stm32f1xx_it.c}
{\xe \v stm32f1xx_it.c\:MemManage_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MemManage_Handler (void )}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Memory management fault. }}\par
{
Definicja w linii {\b 100} pliku {\b stm32f1xx_it.c}.}\par
}
{\xe \v NMI_Handler\:stm32f1xx_it.c}
{\xe \v stm32f1xx_it.c\:NMI_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void NMI_Handler (void )}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Non maskable interrupt. }}\par
{
Definicja w linii {\b 70} pliku {\b stm32f1xx_it.c}.}\par
}
{\xe \v TIM6_IRQHandler\:stm32f1xx_it.c}
{\xe \v stm32f1xx_it.c\:TIM6_IRQHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TIM6_IRQHandler (void )}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles TIM6 global interrupt. }}\par
{
Definicja w linii {\b 165} pliku {\b stm32f1xx_it.c}.}\par
}
{\xe \v UsageFault_Handler\:stm32f1xx_it.c}
{\xe \v stm32f1xx_it.c\:UsageFault_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UsageFault_Handler (void )}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function handles Undefined instruction or illegal state. }}\par
{
Definicja w linii {\b 130} pliku {\b stm32f1xx_it.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Dokumentacja zmiennych\par
\pard\plain 
{\xe \v htim6\:stm32f1xx_it.c}
{\xe \v stm32f1xx_it.c\:htim6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TIM_HandleTypeDef htim6{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definicja w linii {\b 28} pliku {\b stm32f1xx_hal_timebase_tim.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stm32f1xx_it.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/stm32f1xx_it.c}
{\xe \v Core/Src/stm32f1xx_it.c}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Id\'9F do dokumentacji tego pliku.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* USER CODE BEGIN Header */}\par
00018 {\cf20 /* USER CODE END Header */}\par
00019 \par
00020 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
00021 {\cf21 #include "main.h"}\par
00022 {\cf21 #include "stm32f1xx_it.h"}\par
00023 {\cf20 /* Private includes ----------------------------------------------------------*/}\par
00024 {\cf20 /* USER CODE BEGIN Includes */}\par
00025 {\cf20 /* USER CODE END Includes */}\par
00026 \par
00027 {\cf20 /* Private typedef -----------------------------------------------------------*/}\par
00028 {\cf20 /* USER CODE BEGIN TD */}\par
00029 \par
00030 {\cf20 /* USER CODE END TD */}\par
00031 \par
00032 {\cf20 /* Private define ------------------------------------------------------------*/}\par
00033 {\cf20 /* USER CODE BEGIN PD */}\par
00034 \par
00035 {\cf20 /* USER CODE END PD */}\par
00036 \par
00037 {\cf20 /* Private macro -------------------------------------------------------------*/}\par
00038 {\cf20 /* USER CODE BEGIN PM */}\par
00039 \par
00040 {\cf20 /* USER CODE END PM */}\par
00041 \par
00042 {\cf20 /* Private variables ---------------------------------------------------------*/}\par
00043 {\cf20 /* USER CODE BEGIN PV */}\par
00044 \par
00045 {\cf20 /* USER CODE END PV */}\par
00046 \par
00047 {\cf20 /* Private function prototypes -----------------------------------------------*/}\par
00048 {\cf20 /* USER CODE BEGIN PFP */}\par
00049 \par
00050 {\cf20 /* USER CODE END PFP */}\par
00051 \par
00052 {\cf20 /* Private user code ---------------------------------------------------------*/}\par
00053 {\cf20 /* USER CODE BEGIN 0 */}\par
00054 \par
00055 {\cf20 /* USER CODE END 0 */}\par
00056 \par
00057 {\cf20 /* External variables --------------------------------------------------------*/}\par
00058 {\cf17 extern} TIM_HandleTypeDef htim6;\par
00059 \par
00060 {\cf20 /* USER CODE BEGIN EV */}\par
00061 \par
00062 {\cf20 /* USER CODE END EV */}\par
00063 \par
00064 {\cf20 /******************************************************************************/}\par
00065 {\cf20 /*           Cortex-M3 Processor Interruption and Exception Handlers          */}\par
00066 {\cf20 /******************************************************************************/}\par
00070 {\cf18 void} NMI_Handler({\cf18 void})\par
00071 \{\par
00072   {\cf20 /* USER CODE BEGIN NonMaskableInt_IRQn 0 */}\par
00073 \par
00074   {\cf20 /* USER CODE END NonMaskableInt_IRQn 0 */}\par
00075   {\cf20 /* USER CODE BEGIN NonMaskableInt_IRQn 1 */}\par
00076   {\cf19 while} (1)\par
00077   \{\par
00078   \}\par
00079   {\cf20 /* USER CODE END NonMaskableInt_IRQn 1 */}\par
00080 \}\par
00081 \par
00085 {\cf18 void} HardFault_Handler({\cf18 void})\par
00086 \{\par
00087   {\cf20 /* USER CODE BEGIN HardFault_IRQn 0 */}\par
00088 \par
00089   {\cf20 /* USER CODE END HardFault_IRQn 0 */}\par
00090   {\cf19 while} (1)\par
00091   \{\par
00092     {\cf20 /* USER CODE BEGIN W1_HardFault_IRQn 0 */}\par
00093     {\cf20 /* USER CODE END W1_HardFault_IRQn 0 */}\par
00094   \}\par
00095 \}\par
00096 \par
00100 {\cf18 void} MemManage_Handler({\cf18 void})\par
00101 \{\par
00102   {\cf20 /* USER CODE BEGIN MemoryManagement_IRQn 0 */}\par
00103 \par
00104   {\cf20 /* USER CODE END MemoryManagement_IRQn 0 */}\par
00105   {\cf19 while} (1)\par
00106   \{\par
00107     {\cf20 /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */}\par
00108     {\cf20 /* USER CODE END W1_MemoryManagement_IRQn 0 */}\par
00109   \}\par
00110 \}\par
00111 \par
00115 {\cf18 void} BusFault_Handler({\cf18 void})\par
00116 \{\par
00117   {\cf20 /* USER CODE BEGIN BusFault_IRQn 0 */}\par
00118 \par
00119   {\cf20 /* USER CODE END BusFault_IRQn 0 */}\par
00120   {\cf19 while} (1)\par
00121   \{\par
00122     {\cf20 /* USER CODE BEGIN W1_BusFault_IRQn 0 */}\par
00123     {\cf20 /* USER CODE END W1_BusFault_IRQn 0 */}\par
00124   \}\par
00125 \}\par
00126 \par
00130 {\cf18 void} UsageFault_Handler({\cf18 void})\par
00131 \{\par
00132   {\cf20 /* USER CODE BEGIN UsageFault_IRQn 0 */}\par
00133 \par
00134   {\cf20 /* USER CODE END UsageFault_IRQn 0 */}\par
00135   {\cf19 while} (1)\par
00136   \{\par
00137     {\cf20 /* USER CODE BEGIN W1_UsageFault_IRQn 0 */}\par
00138     {\cf20 /* USER CODE END W1_UsageFault_IRQn 0 */}\par
00139   \}\par
00140 \}\par
00141 \par
00145 {\cf18 void} DebugMon_Handler({\cf18 void})\par
00146 \{\par
00147   {\cf20 /* USER CODE BEGIN DebugMonitor_IRQn 0 */}\par
00148 \par
00149   {\cf20 /* USER CODE END DebugMonitor_IRQn 0 */}\par
00150   {\cf20 /* USER CODE BEGIN DebugMonitor_IRQn 1 */}\par
00151 \par
00152   {\cf20 /* USER CODE END DebugMonitor_IRQn 1 */}\par
00153 \}\par
00154 \par
00155 {\cf20 /******************************************************************************/}\par
00156 {\cf20 /* STM32F1xx Peripheral Interrupt Handlers                                    */}\par
00157 {\cf20 /* Add here the Interrupt Handlers for the used peripherals.                  */}\par
00158 {\cf20 /* For the available peripheral interrupt handler names,                      */}\par
00159 {\cf20 /* please refer to the startup file (startup_stm32f1xx.s).                    */}\par
00160 {\cf20 /******************************************************************************/}\par
00161 \par
00165 {\cf18 void} TIM6_IRQHandler({\cf18 void})\par
00166 \{\par
00167   {\cf20 /* USER CODE BEGIN TIM6_IRQn 0 */}\par
00168 \par
00169   {\cf20 /* USER CODE END TIM6_IRQn 0 */}\par
00170   HAL_TIM_IRQHandler(&htim6);\par
00171   {\cf20 /* USER CODE BEGIN TIM6_IRQn 1 */}\par
00172 \par
00173   {\cf20 /* USER CODE END TIM6_IRQn 1 */}\par
00174 \}\par
00175 \par
00176 {\cf20 /* USER CODE BEGIN 1 */}\par
00177 \par
00178 {\cf20 /* USER CODE END 1 */}\par
00179 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dokumentacja pliku Core/Src/system_stm32f1xx.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/system_stm32f1xx.c}
{\xe \v Core/Src/system_stm32f1xx.c}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M3 Device Peripheral Access Layer System Source File. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stm32f1xx.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Definicje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSE_VALUE}\~ 8000000U\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HSI_VALUE}\~ 8000000U\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funkcje\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemInit} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setup the microcontroller system Initialize the Embedded Flash Interface, the PLL and update the SystemCoreClock variable. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SystemCoreClockUpdate} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update SystemCoreClock variable according to Clock Register Values. The SystemCoreClock variable contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Zmienne\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b SystemCoreClock} = 16000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint8_t {\b AHBPrescTable} [16U] = \{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint8_t {\b APBPrescTable} [8U] = \{0, 0, 0, 0, 1, 2, 3, 4\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Opis szczeg\'F3\'B3owy\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMSIS Cortex-M3 Device Peripheral Access Layer System Source File. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
MCD Application Team \par
}}{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab This file provides two functions and one global variable to be called from user application:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemInit()}: Setups the system clock (System clock source, PLL Multiplier factors, AHB/APBx prescalers and Flash settings). This function is called at startup just after reset and before branch to main program. This call is made inside the "startup_stm32f1xx_xx.s" file.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SystemCoreClock variable: Contains the core clock (HCLK), it can be used by the user application to setup the SysTick timer or configure other parameters.\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SystemCoreClockUpdate()}: Updates the variable SystemCoreClock and must be called whenever the core clock is changed during program execution.\par}
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab After each device reset the HSI (8 MHz) is used as system clock source. Then {\b SystemInit()} function is called, in "startup_stm32f1xx_xx.s" file, to configure the system clock before to branch to main program.\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on the product used), refer to "HSE_VALUE". When HSE is used as system clock source, directly or through PLL, and you are using different crystal you have to adapt the HSE value to your own configuration.\par}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Uwaga\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid {\tc\tcl2 {\qc \'A9 Copyright (c) 2017 STMicroelectronics. All rights reserved.} } \par}
This software component is licensed by ST under BSD 3-Clause license, the "License"; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause \par
}{
Definicja w pliku {\b system_stm32f1xx.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
system_stm32f1xx.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/system_stm32f1xx.c}
{\xe \v Core/Src/system_stm32f1xx.c}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Id\'9F do dokumentacji tego pliku.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00059 {\cf21 #include "stm32f1xx.h"}\par
00060 \par
00077 {\cf21 #if !defined  (HSE_VALUE) }\par
00078 {\cf21   #define HSE_VALUE               8000000U }\par
00080 {\cf21 #endif }{\cf20 /* HSE_VALUE */}{\cf21 }\par
00081 \par
00082 {\cf21 #if !defined  (HSI_VALUE)}\par
00083 {\cf21   #define HSI_VALUE               8000000U }\par
00085 {\cf21 #endif }{\cf20 /* HSI_VALUE */}{\cf21 }\par
00086 \par
00088 {\cf21 #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) || defined(STM32F103xG)}\par
00089 {\cf20 /* #define DATA_IN_ExtSRAM */}\par
00090 {\cf21 #endif }{\cf20 /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */}{\cf21 }\par
00091 \par
00092 {\cf20 /* Note: Following vector table addresses must be defined in line with linker}\par
00093 {\cf20          configuration. */}\par
00097 {\cf20 /* #define USER_VECT_TAB_ADDRESS */}\par
00098 \par
00099 {\cf21 #if defined(USER_VECT_TAB_ADDRESS)}\par
00102 {\cf20 /* #define VECT_TAB_SRAM */}\par
00103 {\cf21 #if defined(VECT_TAB_SRAM)}\par
00104 {\cf21 #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       }\par
00106 {\cf21 #define VECT_TAB_OFFSET         0x00000000U     }\par
00108 {\cf21 #else}\par
00109 {\cf21 #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      }\par
00111 {\cf21 #define VECT_TAB_OFFSET         0x00000000U     }\par
00113 {\cf21 #endif }{\cf20 /* VECT_TAB_SRAM */}{\cf21 }\par
00114 {\cf21 #endif }{\cf20 /* USER_VECT_TAB_ADDRESS */}{\cf21 }\par
00115 \par
00116 {\cf20 /******************************************************************************/}\par
00117 \par
00134   {\cf20 /* This variable is updated in three ways:}\par
00135 {\cf20       1) by calling CMSIS function SystemCoreClockUpdate()}\par
00136 {\cf20       2) by calling HAL API function HAL_RCC_GetHCLKFreq()}\par
00137 {\cf20       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency }\par
00138 {\cf20          Note: If you use this function to configure the system clock; then there}\par
00139 {\cf20                is no need to call the 2 first functions listed above, since SystemCoreClock}\par
00140 {\cf20                variable is updated automatically.}\par
00141 {\cf20   */}\par
00142 uint32_t SystemCoreClock = 16000000;\par
00143 {\cf17 const} uint8_t AHBPrescTable[16U] = \{0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9\};\par
00144 {\cf17 const} uint8_t APBPrescTable[8U] =  \{0, 0, 0, 0, 1, 2, 3, 4\};\par
00145 \par
00154 {\cf21 #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) || defined(STM32F103xG)}\par
00155 {\cf21 #ifdef DATA_IN_ExtSRAM}\par
00156   {\cf17 static} {\cf18 void} SystemInit_ExtMemCtl({\cf18 void}); \par
00157 {\cf21 #endif }{\cf20 /* DATA_IN_ExtSRAM */}{\cf21 }\par
00158 {\cf21 #endif }{\cf20 /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */}{\cf21 }\par
00159 \par
00176 {\cf18 void} SystemInit ({\cf18 void})\par
00177 \{\par
00178 {\cf21 #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) || defined(STM32F103xG)}\par
00179 {\cf21   #ifdef DATA_IN_ExtSRAM}\par
00180     SystemInit_ExtMemCtl(); \par
00181 {\cf21   #endif }{\cf20 /* DATA_IN_ExtSRAM */}{\cf21 }\par
00182 {\cf21 #endif }\par
00183 \par
00184   {\cf20 /* Configure the Vector Table location -------------------------------------*/}\par
00185 {\cf21 #if defined(USER_VECT_TAB_ADDRESS)}\par
00186   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; {\cf20 /* Vector Table Relocation in Internal SRAM. */}\par
00187 {\cf21 #endif }{\cf20 /* USER_VECT_TAB_ADDRESS */}{\cf21 }\par
00188 \}\par
00189 \par
00225 {\cf18 void} SystemCoreClockUpdate ({\cf18 void})\par
00226 \{\par
00227   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;\par
00228 \par
00229 {\cf21 #if defined(STM32F105xC) || defined(STM32F107xC)}\par
00230   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;\par
00231 {\cf21 #endif }{\cf20 /* STM32F105xC */}{\cf21 }\par
00232 \par
00233 {\cf21 #if defined(STM32F100xB) || defined(STM32F100xE)}\par
00234   uint32_t prediv1factor = 0U;\par
00235 {\cf21 #endif }{\cf20 /* STM32F100xB or STM32F100xE */}{\cf21 }\par
00236     \par
00237   {\cf20 /* Get SYSCLK source -------------------------------------------------------*/}\par
00238   tmp = RCC->CFGR & RCC_CFGR_SWS;\par
00239   \par
00240   {\cf19 switch} (tmp)\par
00241   \{\par
00242     {\cf19 case} 0x00U:  {\cf20 /* HSI used as system clock */}\par
00243       SystemCoreClock = HSI_VALUE;\par
00244       {\cf19 break};\par
00245     {\cf19 case} 0x04U:  {\cf20 /* HSE used as system clock */}\par
00246       SystemCoreClock = HSE_VALUE;\par
00247       {\cf19 break};\par
00248     {\cf19 case} 0x08U:  {\cf20 /* PLL used as system clock */}\par
00249 \par
00250       {\cf20 /* Get PLL clock source and multiplication factor ----------------------*/}\par
00251       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;\par
00252       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;\par
00253       \par
00254 {\cf21 #if !defined(STM32F105xC) && !defined(STM32F107xC)      }\par
00255       pllmull = ( pllmull >> 18U) + 2U;\par
00256       \par
00257       {\cf19 if} (pllsource == 0x00U)\par
00258       \{\par
00259         {\cf20 /* HSI oscillator clock divided by 2 selected as PLL clock entry */}\par
00260         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;\par
00261       \}\par
00262       {\cf19 else}\par
00263       \{\par
00264 {\cf21  #if defined(STM32F100xB) || defined(STM32F100xE)}\par
00265        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;\par
00266        {\cf20 /* HSE oscillator clock selected as PREDIV1 clock entry */}\par
00267        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; \par
00268 {\cf21  #else}\par
00269         {\cf20 /* HSE selected as PLL clock entry */}\par
00270         {\cf19 if} ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)\par
00271         \{{\cf20 /* HSE oscillator clock divided by 2 */}\par
00272           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;\par
00273         \}\par
00274         {\cf19 else}\par
00275         \{\par
00276           SystemCoreClock = HSE_VALUE * pllmull;\par
00277         \}\par
00278 {\cf21  #endif}\par
00279       \}\par
00280 {\cf21 #else}\par
00281       pllmull = pllmull >> 18U;\par
00282       \par
00283       {\cf19 if} (pllmull != 0x0DU)\par
00284       \{\par
00285          pllmull += 2U;\par
00286       \}\par
00287       {\cf19 else}\par
00288       \{ {\cf20 /* PLL multiplication factor = PLL input clock * 6.5 */}\par
00289         pllmull = 13U / 2U; \par
00290       \}\par
00291             \par
00292       {\cf19 if} (pllsource == 0x00U)\par
00293       \{\par
00294         {\cf20 /* HSI oscillator clock divided by 2 selected as PLL clock entry */}\par
00295         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;\par
00296       \}\par
00297       {\cf19 else}\par
00298       \{{\cf20 /* PREDIV1 selected as PLL clock entry */}\par
00299         \par
00300         {\cf20 /* Get PREDIV1 clock source and division factor */}\par
00301         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;\par
00302         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;\par
00303         \par
00304         {\cf19 if} (prediv1source == 0U)\par
00305         \{ \par
00306           {\cf20 /* HSE oscillator clock selected as PREDIV1 clock entry */}\par
00307           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          \par
00308         \}\par
00309         {\cf19 else}\par
00310         \{{\cf20 /* PLL2 clock selected as PREDIV1 clock entry */}\par
00311           \par
00312           {\cf20 /* Get PREDIV2 division factor and PLL2 multiplication factor */}\par
00313           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;\par
00314           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; \par
00315           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;                         \par
00316         \}\par
00317       \}\par
00318 {\cf21 #endif }{\cf20 /* STM32F105xC */}{\cf21  }\par
00319       {\cf19 break};\par
00320 \par
00321     {\cf19 default}:\par
00322       SystemCoreClock = HSI_VALUE;\par
00323       {\cf19 break};\par
00324   \}\par
00325   \par
00326   {\cf20 /* Compute HCLK clock frequency ----------------*/}\par
00327   {\cf20 /* Get HCLK prescaler */}\par
00328   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];\par
00329   {\cf20 /* HCLK clock frequency */}\par
00330   SystemCoreClock >>= tmp;  \par
00331 \}\par
00332 \par
00333 {\cf21 #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) || defined(STM32F103xG)}\par
00340 {\cf21 #ifdef DATA_IN_ExtSRAM}\par
00350 {\cf18 void} SystemInit_ExtMemCtl({\cf18 void}) \par
00351 \{\par
00352   __IO uint32_t tmpreg;\par
00356   {\cf20 /* Enable FSMC clock */}\par
00357   RCC->AHBENR = 0x00000114U;\par
00358 \par
00359   {\cf20 /* Delay after an RCC peripheral clock enabling */}\par
00360   tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_FSMCEN);\par
00361   \par
00362   {\cf20 /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */}\par
00363   RCC->APB2ENR = 0x000001E0U;\par
00364   \par
00365   {\cf20 /* Delay after an RCC peripheral clock enabling */}\par
00366   tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_IOPDEN);\par
00367 \par
00368   (void)(tmpreg);\par
00369   \par
00370 {\cf20 /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/}\par
00371 {\cf20 /*----------------  SRAM Address lines configuration -------------------------*/}\par
00372 {\cf20 /*----------------  NOE and NWE configuration --------------------------------*/}  \par
00373 {\cf20 /*----------------  NE3 configuration ----------------------------------------*/}\par
00374 {\cf20 /*----------------  NBL0, NBL1 configuration ---------------------------------*/}\par
00375   \par
00376   GPIOD->CRL = 0x44BB44BBU;  \par
00377   GPIOD->CRH = 0xBBBBBBBBU;\par
00378 \par
00379   GPIOE->CRL = 0xB44444BBU;  \par
00380   GPIOE->CRH = 0xBBBBBBBBU;\par
00381 \par
00382   GPIOF->CRL = 0x44BBBBBBU;  \par
00383   GPIOF->CRH = 0xBBBB4444U;\par
00384 \par
00385   GPIOG->CRL = 0x44BBBBBBU;  \par
00386   GPIOG->CRH = 0x444B4B44U;\par
00387    \par
00388 {\cf20 /*----------------  FSMC Configuration ---------------------------------------*/}  \par
00389 {\cf20 /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/}\par
00390   \par
00391   FSMC_Bank1->BTCR[4U] = 0x00001091U;\par
00392   FSMC_Bank1->BTCR[5U] = 0x00110212U;\par
00393 \}\par
00394 {\cf21 #endif }{\cf20 /* DATA_IN_ExtSRAM */}{\cf21 }\par
00395 {\cf21 #endif }{\cf20 /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */}{\cf21 }\par
00396 \par
00408 {\cf20 /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Indeks\par 
\pard\plain 
{\tc \v Indeks}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
