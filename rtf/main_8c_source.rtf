{\rtf1\ansi\ansicpg1250\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset238\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset238\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset238\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v Core/Src/main.c}
{\xe \v Core/Src/main.c}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Idź do dokumentacji tego pliku.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* USER CODE BEGIN Header */}\par
00021 {\cf20 /* USER CODE END Header */}\par
00022 {\cf20 /* Includes ------------------------------------------------------------------*/}\par
00023 {\cf21 #include "main.h"}\par
00024 {\cf21 #include "cmsis_os.h"}\par
00025 {\cf21 #include "gpio.h"}\par
00026 \par
00027 {\cf20 /* Private includes ----------------------------------------------------------*/}\par
00028 {\cf20 /* USER CODE BEGIN Includes */}\par
00029 \par
00030 {\cf20 /* USER CODE END Includes */}\par
00031 \par
00032 {\cf20 /* Private typedef -----------------------------------------------------------*/}\par
00033 {\cf20 /* USER CODE BEGIN PTD */}\par
00034 \par
00035 {\cf20 /* USER CODE END PTD */}\par
00036 \par
00037 {\cf20 /* Private define ------------------------------------------------------------*/}\par
00038 {\cf20 /* USER CODE BEGIN PD */}\par
00039 {\cf21 #define main_TASK_PRIORITY (tskIDLE_PRIORITY + 1)}\par
00040 {\cf20 /* USER CODE END PD */}\par
00041 \par
00042 {\cf20 /* Private macro -------------------------------------------------------------*/}\par
00043 {\cf20 /* USER CODE BEGIN PM */}\par
00044 \par
00045 {\cf20 /* USER CODE END PM */}\par
00046 \par
00047 {\cf20 /* Private variables ---------------------------------------------------------*/}\par
00048 \par
00049 {\cf20 /* USER CODE BEGIN PV */}\par
00050 \par
00051 {\cf17 const} {\cf18 unsigned} {\cf18 char} seg7[] = \{0xC0, 0xF9, 0xA4, 0xB0,\par
00052                               0x99, 0x92, 0x82, 0xF8,\par
00053                               0x80, 0x90, 0x5F\};\par
00054 \par
00055 {\cf17 volatile} uint8_t LED_buf[4] = \{0,0,0,0\};\par
00056 {\cf17 volatile} uint8_t LED_ptr;\par
00057 {\cf20 /* USER CODE END PV */}\par
00058 \par
00059 {\cf20 /* Private function prototypes -----------------------------------------------*/}\par
00060 {\cf18 void} SystemClock_Config({\cf18 void});\par
00061 {\cf18 void} MX_FREERTOS_Init({\cf18 void});\par
00062 {\cf20 /* USER CODE BEGIN PFP */}\par
00063 xSemaphoreHandle Tim1s;\par
00064 xSemaphoreHandle Tim100ms;\par
00065 xSemaphoreHandle Tim50ms;\par
00066 xSemaphoreHandle Tim20ms;\par
00067 xSemaphoreHandle Tim2ms;\par
00068 \par
00069 xQueueHandle Wys_A;\par
00070 xQueueHandle Wys_B;\par
00071 xQueueHandle Wys_C;\par
00072 xQueueHandle Wys_D;\par
00073 \par
00074 xQueueHandle HasloJendenZnak;\par
00075 xQueueHandle ZmianaCyfry;\par
00076 xQueueHandle ZmianaCyfry2;\par
00077 {\cf20 /* USER CODE END PFP */}\par
00078 \par
00079 {\cf20 /* Private user code ---------------------------------------------------------*/}\par
00080 {\cf20 /* USER CODE BEGIN 0 */}\par
00095 {\cf17 static} {\cf18 void} vTask1({\cf18 void} *pvParameters)\par
00096 \{\par
00097   {\cf17 static} uint8_t znak[4] = \{0,0,0,0\};\par
00098     uint8_t wyswietl = 0;\par
00099     \par
00100     {\cf19 for}( ;; )\par
00101     \{\par
00102         {\cf19 if} (xSemaphoreTake(Tim2ms, portMAX_DELAY))\par
00103         \{\par
00104             xQueueReceive(Wys_A, &znak[0], ( TickType_t ) 0 );\par
00105             xQueueReceive(Wys_B, &znak[1], ( TickType_t ) 0 );\par
00106             xQueueReceive(Wys_C, &znak[2], ( TickType_t ) 0 );\par
00107             xQueueReceive(Wys_D, &znak[3], ( TickType_t ) 0 );\par
00108       xQueueReceive(ZmianaCyfry2, &wyswietl, (TickType_t)0);\par
00109             LED_buf[0] = seg7[znak[0]];\par
00110             LED_buf[1] = seg7[znak[1]];\par
00111             LED_buf[2] = seg7[znak[2]];\par
00112             LED_buf[3] = seg7[znak[3]];\par
00113           {\cf20 // obsluga wyswietlacza siedmiosegmentowego LED}\par
00114       {\cf20 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++}\par
00115       {\cf19 if} ((++LED_ptr) > 3) LED_ptr = 0;\par
00116 \par
00117             \par
00118             \par
00119             \par
00120             \par
00121       HAL_GPIO_WritePin(Anoda_1_GPIO_Port, Anoda_4_Pin|Anoda_3_Pin|Anoda_2_Pin\par
00122                                           |Anoda_1_Pin, GPIO_PIN_RESET);\par
00123           {\cf20 // ustawienie segmentow}\par
00124       Katoda_A_GPIO_Port->BSRR = (uint32_t)LED_buf[wyswietl];\par
00125           Katoda_A_GPIO_Port->BSRR = (uint32_t)(~LED_buf[wyswietl]) << 16;\par
00126         \par
00127           {\cf20 // wybor wyswietlacza}\par
00128       {\cf19 switch} (wyswietl)\par
00129       \{\par
00130         {\cf19 case} 0: HAL_GPIO_WritePin(Anoda_1_GPIO_Port, Anoda_1_Pin, GPIO_PIN_SET);\par
00131                 {\cf19 break};\par
00132         {\cf19 case} 1: HAL_GPIO_WritePin(Anoda_2_GPIO_Port, Anoda_2_Pin, GPIO_PIN_SET);\par
00133                 {\cf19 break};\par
00134         {\cf19 case} 2: HAL_GPIO_WritePin(Anoda_3_GPIO_Port, Anoda_3_Pin, GPIO_PIN_SET);\par
00135                 {\cf19 break};\par
00136         {\cf19 case} 3: HAL_GPIO_WritePin(Anoda_4_GPIO_Port, Anoda_4_Pin, GPIO_PIN_SET);\par
00137                 {\cf19 break};\par
00138       \}\par
00139     {\cf20 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++}\par
00140             \par
00141         \}\par
00142     \}\par
00143 \}\par
00144 {\cf17 static} {\cf18 void} vTask2({\cf18 void} *pvParameters);\par
00145 {\cf17 static} {\cf18 void} vTask2({\cf18 void} *pvParameters)\par
00146 \{\par
00147   {\cf17 static} uint8_t dane_enkoder = 0;\par
00148   {\cf17 static} uint8_t klawisz_enkoder = 0;\par
00149   {\cf17 static} uint8_t dane_wyswietlacz[4] = \{0, 0, 0, 0\};\par
00150 \par
00151   {\cf19 for}(;;)\par
00152   \{\par
00153     {\cf19 if}(xSemaphoreTake(Tim50ms, portMAX_DELAY))\par
00154     \{\par
00155       xQueueReceive(HasloJendenZnak, &dane_enkoder, (TickType_t)0);\par
00156       xQueueReceive(ZmianaCyfry, &klawisz_enkoder, (TickType_t)0);\par
00157       dane_wyswietlacz[klawisz_enkoder] = dane_enkoder;\par
00158       {\cf19 if}(klawisz_enkoder == 4)\par
00159       \{\par
00160         {\cf19 if}(dane_wyswietlacz[0] == 1 && dane_wyswietlacz[1] == 2 && dane_wyswietlacz[2] == 3 && dane_wyswietlacz[3]== 4)\par
00161         \{\par
00162           HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, GPIO_PIN_RESET);\par
00163                     HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, GPIO_PIN_RESET);\par
00164         \}\par
00165       \}\par
00166       {\cf19 else}\par
00167       \{\par
00168         HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, GPIO_PIN_SET);\par
00169         HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, GPIO_PIN_SET);\par
00170       \}\par
00171             xQueueSend(Wys_A , &dane_wyswietlacz[0], portMAX_DELAY);\par
00172             xQueueSend(Wys_B , &dane_wyswietlacz[1], portMAX_DELAY);\par
00173             xQueueSend(Wys_C , &dane_wyswietlacz[2], portMAX_DELAY);\par
00174             xQueueSend(Wys_D , &dane_wyswietlacz[3], portMAX_DELAY);\par
00175     \}\par
00176   \}\par
00177 \}\par
00178 {\cf17 static} {\cf18 void} vTask3({\cf18 void} *pvParameters);\par
00179 {\cf17 static} {\cf18 void} vTask3({\cf18 void} *pvParameters)\par
00180 \{\par
00181   {\cf17 static} uint8_t EnkoderWartosc = 0;\par
00182     {\cf17 static} uint8_t flaga_zmiany = 0;\par
00183   {\cf17 static} uint8_t klawiszWyswietlacza = 0;\par
00184     {\cf17 static} uint8_t debouncer = 0, klawisz = 0;\par
00185     {\cf17 static} uint8_t left = 0, right = 0;\par
00186 \par
00187   {\cf19 for}(;;)\par
00188   \{\par
00189     {\cf19 if} (xSemaphoreTake(Tim2ms, portMAX_DELAY))\par
00190         \{\par
00191             left = !HAL_GPIO_ReadPin(Enkoder_1_GPIO_Port, Enkoder_1_Pin);\par
00192             right = !HAL_GPIO_ReadPin(Enkoder_2_GPIO_Port, Enkoder_2_Pin);\par
00193             {\cf19 switch}(debouncer)\par
00194             \{\par
00195                 {\cf19 case} 0: {\cf20 //00}\par
00196                     {\cf19 if}(left&&!right) debouncer = 1;\par
00197                     {\cf19 if}(!left&&right) debouncer = 4;\par
00198                     {\cf19 break};\par
00199                 {\cf19 case} 1: {\cf20 //01}\par
00200                     {\cf19 if}(left&&!right) debouncer = 1;\par
00201                     {\cf19 else}\{ {\cf19 if}(left&&right) debouncer = 2;\par
00202                     {\cf19 else} debouncer = 0;\}\par
00203                     {\cf19 break};\par
00204                 {\cf19 case} 2: {\cf20 //11}\par
00205                     {\cf19 if}(left&&right) debouncer = 2;\par
00206                     {\cf19 else}\{ {\cf19 if}(!left&&right) debouncer = 3;\par
00207                     {\cf19 else} debouncer = 1;\}\par
00208                     {\cf19 break};\par
00209                 {\cf19 case} 3: {\cf20 //10}\par
00210                     {\cf19 if}(!left&&right) debouncer = 3;\par
00211                     {\cf19 else}\{ {\cf19 if}(!left&&!right)\par
00212                     \{\par
00213                         {\cf19 if}(flaga_zmiany == 0)\par
00214                         \{\par
00215                         {\cf19 if}(EnkoderWartosc == 0 ) EnkoderWartosc = 9;\par
00216                         {\cf19 else} EnkoderWartosc--;\par
00217                         flaga_zmiany = 1;\par
00218                         \}\par
00219                         debouncer = 0;\par
00220                     \}\par
00221                     {\cf19 else} debouncer = 2;\}\par
00222                     {\cf19 break};\par
00223                 {\cf19 case} 4: {\cf20 //10}\par
00224                     {\cf19 if}(!left&&right) debouncer = 4;\par
00225                     {\cf19 else}\{ {\cf19 if}(left&&right) debouncer = 5;\par
00226                     {\cf19 else} debouncer = 0;\}\par
00227                     {\cf19 break};\par
00228                 {\cf19 case} 5: {\cf20 //11}\par
00229                     {\cf19 if}(left&&right) debouncer = 5;\par
00230                     {\cf19 else}\{ {\cf19 if}(left&&!right) debouncer = 6;\par
00231                     {\cf19 else} debouncer = 3;\}\par
00232                     {\cf19 break};\par
00233                 {\cf19 case} 6: {\cf20 //01}\par
00234                     {\cf19 if}(left&&!right) debouncer = 6;\par
00235                     {\cf19 else}\{ {\cf19 if}(!left&&!right)\par
00236                     \{\par
00237                         {\cf19 if}(flaga_zmiany == 0)\par
00238                         \{\par
00239                         {\cf19 if}(EnkoderWartosc == 9) EnkoderWartosc = 0; \par
00240                         {\cf19 else} EnkoderWartosc++;\par
00241                         flaga_zmiany = 1;\par
00242                         \}\par
00243                         debouncer = 0;\par
00244                     \}\par
00245                     {\cf19 else} debouncer = 5;\}\par
00246                     {\cf19 break};\par
00247 \par
00248             \}\par
00249         \}\par
00250         flaga_zmiany = 0;\par
00251         {\cf19 if} (xSemaphoreTake(Tim20ms, portMAX_DELAY))\par
00252         \{\par
00253       {\cf19 switch}(klawisz)\par
00254             \{\par
00255                 {\cf19 case} 0:\par
00256                     {\cf19 if}(HAL_GPIO_ReadPin(Klawisz_GPIO_Port, Klawisz_Pin))klawisz=0;\par
00257                     {\cf19 else} klawisz=1;\par
00258                     {\cf19 break};\par
00259                 {\cf19 case} 1:\par
00260                     {\cf19 if}(HAL_GPIO_ReadPin(Klawisz_GPIO_Port, Klawisz_Pin))klawisz=1;\par
00261                     {\cf19 else}\par
00262                         \{\par
00263                             {\cf19 if}(klawiszWyswietlacza == 4) klawiszWyswietlacza = 0;\par
00264                             {\cf19 else} klawiszWyswietlacza++;\par
00265                             EnkoderWartosc = 0;\par
00266                             klawisz=2;\par
00267                         \}\par
00268                     {\cf19 break};\par
00269                 {\cf19 case} 2:\par
00270                     {\cf19 if}(!HAL_GPIO_ReadPin(Klawisz_GPIO_Port, Klawisz_Pin))klawisz=2;\par
00271                     {\cf19 else} klawisz=3;\par
00272                     {\cf19 break};\par
00273                 {\cf19 case} 3:\par
00274                     {\cf19 if}(!HAL_GPIO_ReadPin(Klawisz_GPIO_Port, Klawisz_Pin))klawisz=3;\par
00275                     {\cf19 else} klawisz=0;\par
00276                     {\cf19 break};\par
00277             \}\par
00278         \}\par
00279             xQueueSend(HasloJendenZnak , &EnkoderWartosc, portMAX_DELAY);\par
00280             xQueueSend(ZmianaCyfry , &klawiszWyswietlacza, portMAX_DELAY);\par
00281             xQueueSend(ZmianaCyfry2 , &klawiszWyswietlacza, portMAX_DELAY);\par
00282   \}\par
00283 \}\par
00284 \par
00285 {\cf18 void} vApplicationTickHook({\cf18 void})\par
00286 \{\par
00287   {\cf17 static} uint8_t time1s = 0;\par
00288   {\cf17 static} uint8_t time100ms = 0;\par
00289   {\cf17 static} uint8_t time50ms = 0;\par
00290   {\cf17 static} uint8_t time20ms = 0;\par
00291   {\cf17 static} uint8_t time2ms = 0;\par
00292   {\cf18 signed} portBASE_TYPE xHigherPriorityTaskWoken = pdFALSE;\par
00293 \par
00294         {\cf19 if} (time2ms++ > 1)\par
00295         \{\par
00296             time2ms = 0;\par
00297             xSemaphoreGiveFromISR(Tim2ms, &xHigherPriorityTaskWoken);\par
00298         \}\par
00299     {\cf19 if} (time1s++ > 250)\par
00300     \{\par
00301             time1s = 0;\par
00302       xSemaphoreGiveFromISR(Tim1s, &xHigherPriorityTaskWoken);\par
00303     \}\par
00304         {\cf19 if} (time100ms++ >50)\par
00305         \{\par
00306             time100ms = 0;\par
00307             xSemaphoreGiveFromISR(Tim100ms, &xHigherPriorityTaskWoken);\par
00308         \}\par
00309         {\cf19 if} (time50ms++ >25)\par
00310         \{\par
00311             time50ms = 0;\par
00312             xSemaphoreGiveFromISR(Tim50ms, &xHigherPriorityTaskWoken);\par
00313         \}\par
00314         {\cf19 if} (time20ms++ >10)\par
00315         \{\par
00316             time20ms = 0;\par
00317             xSemaphoreGiveFromISR(Tim20ms, &xHigherPriorityTaskWoken);\par
00318         \}\par
00319     \par
00320   \par
00321   {\cf19 if} (xHigherPriorityTaskWoken == pdTRUE) taskYIELD();\par
00322 \}\par
00323 {\cf20 /* USER CODE END 0 */}\par
00324 \par
00329 {\cf18 int} main({\cf18 void})\par
00330 \{\par
00331   {\cf20 /* USER CODE BEGIN 1 */}\par
00332 \par
00333   {\cf20 /* USER CODE END 1 */}\par
00334 \par
00335   {\cf20 /* MCU Configuration--------------------------------------------------------*/}\par
00336 \par
00337   {\cf20 /* Reset of all peripherals, Initializes the Flash interface and the Systick. */}\par
00338   HAL_Init();\par
00339 \par
00340   {\cf20 /* USER CODE BEGIN Init */}\par
00341 \par
00342   {\cf20 /* USER CODE END Init */}\par
00343 \par
00344   {\cf20 /* Configure the system clock */}\par
00345   SystemClock_Config();\par
00346 \par
00347   {\cf20 /* USER CODE BEGIN SysInit */}\par
00348 \par
00349   {\cf20 /* USER CODE END SysInit */}\par
00350 \par
00351   {\cf20 /* Initialize all configured peripherals */}\par
00352   MX_GPIO_Init();\par
00353   {\cf20 /* USER CODE BEGIN 2 */}\par
00354   HAL_GPIO_WritePin(LED_1_GPIO_Port, LED_1_Pin, GPIO_PIN_SET);\par
00355   HAL_GPIO_WritePin(LED_2_GPIO_Port, LED_2_Pin, GPIO_PIN_SET);\par
00356 \par
00357   vSemaphoreCreateBinary(Tim1s);\par
00358   vSemaphoreCreateBinary(Tim100ms);\par
00359     vSemaphoreCreateBinary(Tim50ms);\par
00360   vSemaphoreCreateBinary(Tim20ms);\par
00361   vSemaphoreCreateBinary(Tim2ms);\par
00362 \par
00363   Wys_A = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00364     Wys_B = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00365     Wys_C = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00366     Wys_D = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00367 \par
00368   HasloJendenZnak = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00369   ZmianaCyfry = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00370   ZmianaCyfry2 = xQueueCreate( 16, {\cf17 sizeof}(uint8_t) );\par
00371   \par
00372   xTaskCreate(vTask1, {\cf22 "WyswietlaczSiedmioSegmentowy"}, configMINIMAL_STACK_SIZE, NULL, main_TASK_PRIORITY, NULL);\par
00373     xTaskCreate(vTask2, {\cf22 "PorownywanieHasla"}, configMINIMAL_STACK_SIZE, NULL, main_TASK_PRIORITY, NULL);\par
00374     xTaskCreate(vTask3, {\cf22 "ObslugaEnkodera"}, configMINIMAL_STACK_SIZE, NULL, main_TASK_PRIORITY, NULL);\par
00375   {\cf20 /* USER CODE END 2 */}\par
00376 \par
00377   {\cf20 /* Call init function for freertos objects (in freertos.c) */}\par
00378   MX_FREERTOS_Init();\par
00379   {\cf20 /* Start scheduler */}\par
00380   osKernelStart();\par
00381 \par
00382   {\cf20 /* We should never get here as control is now taken by the scheduler */}\par
00383   {\cf20 /* Infinite loop */}\par
00384   {\cf20 /* USER CODE BEGIN WHILE */}\par
00385   {\cf19 while} (1)\par
00386   \{\par
00387     {\cf20 /* USER CODE END WHILE */}\par
00388 \par
00389     {\cf20 /* USER CODE BEGIN 3 */}\par
00390   \}\par
00391   {\cf20 /* USER CODE END 3 */}\par
00392 \}\par
00393 \par
00398 {\cf18 void} SystemClock_Config({\cf18 void})\par
00399 \{\par
00400   RCC_OscInitTypeDef RCC_OscInitStruct = \{0\};\par
00401   RCC_ClkInitTypeDef RCC_ClkInitStruct = \{0\};\par
00402 \par
00406   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;\par
00407   RCC_OscInitStruct.HSEState = RCC_HSE_ON;\par
00408   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;\par
00409   RCC_OscInitStruct.HSIState = RCC_HSI_ON;\par
00410   RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;\par
00411   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;\par
00412   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;\par
00413   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;\par
00414   RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;\par
00415   RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL10;\par
00416   RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV2;\par
00417   {\cf19 if} (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)\par
00418   \{\par
00419     Error_Handler();\par
00420   \}\par
00423   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK\par
00424                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;\par
00425   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;\par
00426   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;\par
00427   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;\par
00428   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;\par
00429 \par
00430   {\cf19 if} (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)\par
00431   \{\par
00432     Error_Handler();\par
00433   \}\par
00436   __HAL_RCC_PLLI2S_ENABLE();\par
00437 \}\par
00438 \par
00439 {\cf20 /* USER CODE BEGIN 4 */}\par
00440 \par
00441 {\cf20 /* USER CODE END 4 */}\par
00442 \par
00451 {\cf18 void} HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)\par
00452 \{\par
00453   {\cf20 /* USER CODE BEGIN Callback 0 */}\par
00454 \par
00455   {\cf20 /* USER CODE END Callback 0 */}\par
00456   {\cf19 if} (htim->Instance == TIM6) \{\par
00457     HAL_IncTick();\par
00458   \}\par
00459   {\cf20 /* USER CODE BEGIN Callback 1 */}\par
00460 \par
00461   {\cf20 /* USER CODE END Callback 1 */}\par
00462 \}\par
00463 \par
00468 {\cf18 void} Error_Handler({\cf18 void})\par
00469 \{\par
00470   {\cf20 /* USER CODE BEGIN Error_Handler_Debug */}\par
00471   {\cf20 /* User can add his own implementation to report the HAL error return state */}\par
00472   __disable_irq();\par
00473   {\cf19 while} (1)\par
00474   \{\par
00475   \}\par
00476   {\cf20 /* USER CODE END Error_Handler_Debug */}\par
00477 \}\par
00478 \par
00479 {\cf21 #ifdef  USE_FULL_ASSERT}\par
00487 {\cf18 void} assert_failed(uint8_t *file, uint32_t line)\par
00488 \{\par
00489   {\cf20 /* USER CODE BEGIN 6 */}\par
00490   {\cf20 /* User can add his own implementation to report the file name and line number,}\par
00491 {\cf20      ex: printf("Wrong parameters value: file %s on line %d\\r\\n", file, line) */}\par
00492   {\cf20 /* USER CODE END 6 */}\par
00493 \}\par
00494 {\cf21 #endif }{\cf20 /* USE_FULL_ASSERT */}{\cf21 }\par
00495 \par
}
}